' Gambas module file


'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.

       
PUBLIC vObj AS Object[]          
PUBLIC SUB LIST_WIN_PARTITIONS()
DIM tl AS TextLabel
DIM cb AS ComboBox
DIM y AS Integer
DIM x AS Integer
DIM i AS Integer
DIM sDump1 AS String
DIM sPartList AS String[]
DIM sPart AS String
DIM sSize AS String
DIM lbwidth AS Integer

x = FrmWinDrives.svWinDrives.Left + 4
y = FrmWinDrives.svWinDrives.Top + 8


  ' now, do the WIN partitions
  ' MOVE THESE PARTITIONS TO A DIFFERENT WINDOW.
  ' THESE ARE ONLY NEEDED FOR FSTAB
  sDump1 = ""
    'FIX THIS COMMAND.... MAY NOT WORK OR NEED MORE ACCURATE DETECTION
  SHELL "export PATH=$PATH:/sbin && sudo probepart | grep -e \" *FAT32$\" | cut -f 1 -d \' \'" TO sDump1
    File.Save(Temp("fat32"), Trim(sDump1))
    sDump1 = ""
  SHELL "export PATH=$PATH:/sbin && sudo probepart | grep -e \" *FAT$\" | cut -f 1 -d \' \'" TO sDump1
    File.Save(Temp("fat"), Trim(sDump1))
    sDump1 = ""
  SHELL "export PATH=$PATH:/sbin && sudo probepart | grep -e \" *NTFS$\" | cut -f 1 -d \' \'" TO sDump1
    File.Save(Temp("ntfs"), Trim(sDump1))
    sDump1 = ""
    sDump1 = File.Load(Temp("fat32")) & gb.NewLine &
    File.Load(Temp("fat")) & gb.NewLine &
    File.Load(Temp("ntfs")) & gb.NewLine
    sDump1 = Trim(sDump1)
    
        
    IF sDump1 <> "" THEN 
    sDump1 = Trim(sDump1)
    'y = y + tl.Height * 2 + 4
        ' create a new text label just to label the separation between windows and linux partitions
        tl = NEW TextLabel(FrmWinDrives.svWinDrives) AS "Separator"
          WITH tl
            .Text = "<b>Windows Partitions</b>"
            .Height = 27
            .Width = MdlObjSizer.get_object_width(.Text)
            .x = x
            .y = y
          END WITH 
    
    'END IF
      IF InStr(sDump1, gb.NewLine) THEN ' more than one partition found
        sPartList = Split(sDump1, gb.NewLine)
          FOR i = 0 TO sPartList.Count - 1
            sPart = Right(sPartList[i], Len(sPartList[i]) - RInStr(sPartList[i], "/"))
                        
                SHELL "sudo mkdir /mnt" &/ spart & " && sudo mount " & Trim(sPartList[i]) & Space(1) & "/mnt" &/ sPart WAIT 
                    ' get the size using df -h | grep sPart and some sed
                    ' will embed some bash, but should probabbly be fixed
                SHELL "export " & sPart & "=$(df -h | grep " & sPart & ") && echo $" & sPart & " | cut -f 2 -d \' \'" TO sSize
                SHELL "sudo umount /mnt" &/ spart
                SHELL "sudo rm -rf /mnt" &/ spart
            
              tl = NEW TextLabel(FrmWinDrives.svWinDrives) AS "WinPartitions"
                WITH tl
                  .Width = tl.Width
                  .Text = sPart & " ( " & sSize & " )"
                  .Tag = sPartList[i]
                  .Height = 27
                  .x = FrmPartSel.tlPartRow.Left
                  .y = y
                    IF .Width > lbwidth THEN 
                    lbwidth = .Width
                    END IF
                  .Width = lbwidth
                END WITH
                ME.vObj.Add(tl)
                
                ' now create the combobox to select the mount point
                  cb = NEW ComboBox
                    WITH cb
                      .Width = tl.Width
                      .Tag = sPartList[i]
                      .Height = 27
                      .x = tl.Left + tl.Width + 8
                      .y = tl.Top
                      .Width = lbwidth
                      .Add("/mnt" &/ sPart)
                    END WITH 
                
                y = y + tl.Height + 4
                
                
                
          NEXT 
                    
          
          
          
      ELSE ' only one win partition found
      
        sPart = Right(sDump1, Len(sDump1) - RInStr(sDump1, "/"))
        SHELL "sudo mkdir /mnt" &/ spart & " && sudo mount " & Trim(sDump1) & Space(1) & "/mnt" &/ sPart WAIT 
        SHELL "export " & sPart & "=$(df -h | grep " & sPart & ") && echo $" & sPart & " | cut -f 2 -d \' \'" TO sSize
        
        
        
        'y = y + tl.Height + 4
        tl = NEW TextLabel(FrmWinDrives.svWinDrives) AS "WinPartitions"
          WITH tl
            .Width = lbwidth
            .Text = sDump1 & " ( " & sSize & " )"
            .tag = sDump1
            .Height = 27
            .x = FrmPartSel.tlPartRow.Left
            .y = y
                        
          END WITH 
          SHELL "sudo umount /mnt" &/ spart WAIT 
        SHELL "sudo rm -rf /mnt" &/ spart WAIT 
  END IF
 ELSE 
  ' no widnows partitions found
    tl = NEW TextLabel(FrmWinDrives.svWinDrives)
      WITH tl
        .Text = "<b>No Windows partitions detected</b>"
        .Width = MdlObjSizer.get_object_width(.Text)
        .Height = 27
        .x = y
        .y = y
      END WITH 
 END IF
END 
           
  
  
