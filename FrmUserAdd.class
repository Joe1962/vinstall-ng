' Gambas class file


'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.


PUBLIC iUID AS Integer = 1000

PRIVATE otl AS Object[]
PRIVATE otb AS Object[]


PUBLIC SUB Form_Open()
  Fmain.frmcurr = ME
  
  WITH FMain
    .FrmCurr = ME
    .tvPlan["Conf2"].Picture = MdlCore.sDonePic
    .tvPlan["Conf3"].picture = MdlCore.sNowPic
    .tvPlan["Conf3"].Selected = TRUE
  END WITH 
    WITH ME
      .tlBanner.Text = "<h3>" & ("Create User Accounts") & "</h3>"
      .tbPicPath.Visible = FALSE
      .btBrowse.Visible = FALSE
    END WITH 
    'WAIT 3
    otl = NEW Object[]
    otb = NEW Object[]
        WITH otl
        .Add(ME.TextLabel2)
        .Add(ME.tlRealName)
        .Add(ME.TextLabel3)
        .Add(ME.TextLabel4)
        '.Add(ME.tlRealName)
      END WITH 
    WITH otb
      .Add(ME.tbPasswd1)
      .Add(ME.tbPasswd2)
      .Add(ME.tbRealname)
      .Add(ME.tbUsername)
    END WITH 
        
    
    MdlUsrAdd.DISPLAY_USER_GROUP_OPTIONS()
END 


PUBLIC SUB Button1_Click()
  DIM sCAPS AS String
  DIM sCHAR AS String
  DIM sLogE AS String
  DIM sPicdir AS String = ClsGlobal.sTargetMnt &/ "usr/share/apps/kdm/pics/users/"
  DIM sGroups AS String '= '"plugdev,disk,cdrom,floppy,lp,scanner,audio,video,games"
  DIM cb AS CheckBox

   
  
  
  IF ME.tbUsername.Text = "" THEN 
    Message(("Enter the login name that this user will use to login to this system."))
  ELSE 
    'SHELL "echo " & ME.tbUsername.Text & "| grep -e \'[A-Z]\'" TO sCAPS
    IF ME.tbUsername.text LIKE "*[A-Z]*" THEN
    'IF ME.tbUsername.textNOT LIKE "*[a-z0-9_-]*" THEN 
    Message.Error(("Login name field contains illegal characters. Please use only lowercase letters and numbers")) 
    STOP EVENT 
    'ELSE IF ME.tbUsernameNOT LIKE "*[a-z0-9_-]*" THEN 
      
    
    END IF
    
    SHELL "echo " & ME.tbUsername.Text & "| grep -e \'[^a-z0-9_-]\'" TO sCHAR
    SHELL "grep -e ^" & ME.tbUsername.Text & ClsGlobal.sTargetMnt &/ "etc/passwd" TO sLogE 
    
   IF sCHAR <> "" THEN
      Message(("Username contains illegal characters"))
      RETURN 
    ELSE IF sLogE <> "" THEN
      Message(("Username already exists"))
      RETURN 
    ELSE   
      IF ME.tbPasswd1.Text = "" THEN 
        Message(("Enter a Password."))
        RETURN 
      ELSE 
        IF ME.tbPasswd1.Text = ME.tbPasswd2.Text THEN 
        
          'IF IsDir(sPicdir) THEN 
          IF bUsePic.Value = TRUE THEN 
            'SHELL "cd " & sPicdir & " && ln -s root1.png root.face.icon"          ' This needs to go somewhere else
              
            'SHELL "cd " & sPicdir & " ; ln -s default3.png " & ME.tbUsername.Text & ".face.icon"
            
            SHELL "cd " & sPicdir & "; ln -s " & Replace(tbPicPath.Text, ClsGlobal.sTargetMnt, "") & Space(1) & tbUsername.Text & ".face.icon" WAIT 
            
          ENDIF 
          
            'COMPILE LIST OF GROUPS THIS USER WILL BELONG TO
                FOR EACH cb IN MdlUsrAdd.objGrps
                  IF cb.Value = TRUE THEN 
                    sGroups = sGroups & "," & cb.Text
                  END IF
              NEXT 
                sGroups = Right(sGroups, Len(sGroups) - 1)
                'Message(sGroups)
                
                
                  
          
          SHELL "chroot /mnt/target  /usr/sbin/groupdel " & ME.tbUsername.Text & " &> /dev/null" WAIT 
          'SHELL "chroot /mnt/target /usr/sbin/groupadd -g " & iUID & Space(1) & ME.tbUsername.Text WAIT 
          SHELL "chroot /mnt/target /usr/sbin/groupadd " & ME.tbUsername.Text & " &> /dev/null" WAIT 
          'Message("chroot /mnt/target /usr/sbin/useradd -m -s /bin/bash -u " & iUID & " -g " & ME.tbUsername.Text & " -G " & sGroups & ME.tbUsername.Text)
          'SHELL "chroot /mnt/target  /usr/sbin/useradd -m -s /bin/bash -u " & iUID & " -g " & ME.tbUsername.Text & " -G " & sGroups & Space(1) & ME.tbUsername.Text WAIT 
          SHELL "chroot /mnt/target /usr/sbin/useradd -m -c " & "\'" & ME.tbRealname.text & "\'" & " -g " & ME.tbUsername.text &
          " -p " & ME.tbPasswd1.text & " -G " & "\'" & sGroups & "\' " & ME.tbUsername.Text WAIT 
        '  sDocmd = "useradd -m -c " & "\'" & sname & "\'" & " -g " & slogin & " -p " & ME.txtpass1.Text & 
       '" -G " & "\'" & sgrparse & "\' " & slogin
          
          'Message("chroot /mnt/target /sbin/passwdx " & ME.tbUsername.Text & Space(1) & ME.tbPasswd1.Text)
          SHELL "chroot /mnt/target /sbin/passwdx " & ME.tbUsername.Text & Space(1) & ME.tbPasswd1.Text WAIT 
          Message("user " & ME.tbUsername.Text & " was created.")
         btClrFrm_Click() ' clear the form
          INC iUID
        ELSE 
          Message("Passwords do not match")
          ME.tbPasswd1.Clear
          ME.tbPasswd2.Clear
        ENDIF 
      ENDIF 
    ENDIF
  ENDIF  
  SHELL "umount " & ClsGlobal.sTargetMnt &/ "dev" WAIT 
  SHELL "umount " & ClsGlobal.sTargetMnt &/ "proc" WAIT
  Message("Vectorlinux has been installed click OK to reboot")
  'SHELL "reboot"
END
  

PUBLIC SUB Form_Resize()
  
  DIM iboxleft AS Integer
  DIM iboxwidth AS Integer = 250
  DIM cb AS CheckBox
  DIM icbspace AS Integer
  DIM icby AS Integer
  DIM tl AS TextLabel
  DIM tb AS TextBox
  DIM itltop, itlbottom AS Integer
  'iboxleft = 0

   itltop = tlExp.top + tlExp.Height + 8
    
    FOR EACH tl IN otl
      tl.Move(4, itltop, MdlObjSizer.get_object_width(tl.text))
        IF tl.Width > iboxleft THEN iboxleft = tl.Left + tl.Width + 8
      itltop = itltop + tl.Height + 4
      'itlbottom = itltop + tl.Height + 4
    NEXT 
    FOR EACH tl IN otl
      FOR EACH tb IN otb
        IF tb.tag = tl.tag THEN tb.Move(iboxleft, tl.top, iboxwidth)
      NEXT 
    NEXT 

  FOR EACH tb IN otb
    IF tb.tag = "line4" THEN itlbottom = tl.top + tl.Height + 8
  NEXT 
    

  WITH ME 
  
    .tlBanner.Move(4, 4, .ClientWidth - (.tlBanner.left * 2))
    .hrSep.Move(4, .tlBanner.top + .tlBanner.Height, .tlBanner.Width)
    .tlExp.Move(4, .hrSep.top + .hrSep.Height + 12, .hrSep.Width)

    
    .bUsePic.Move(4, itlbottom, MdlObjSizer.get_object_width(.bUsePic.Text) + 36)

    .tbPicPath.Move(4, .bUsePic.top + .bUsePic.Height + 2, .TextLabel2.Width + iboxwidth + 8)
    '.tbPicPath.Move(4, .bUsePic.top + .bUsePic.height + 2, .tlBanner.Width - (.btBrowse.Width + 4))
    .btBrowse.Move(.tbPicPath.Left + .tbPicPath.Width + 4, .tbPicPath.top, MdlObjSizer.get_object_width(.btBrowse.text) + 36)
    .fGroupSel.Move(4, .tbPicPath.top + .tbPicPath.Height + 4, .ClientW - (.fGroupSel.Left * 2), .ClientH - (.fGroupSel.top + (.Button1.Height)))
    .Button1.Move(4, .fGroupSel.top + .fGroupSel.Height + 8, MdlObjSizer.get_object_width(.Button1.Text) + 36)
    .btClrFrm.Move(.Button1.Left + .Button1.Width + 4, .Button1.top, MdlObjSizer.get_object_width(.btClrFrm.text) + 36)
    '.pbUsrPic.Move(.tbUsername.Left + (.tbUsername.Width + 2), .tbUsername.top)
    .pbUsrPic.Move(.btBrowse.Left + .btBrowse.Width, tbUsername.top)
    .btgrpHelp.Move(.fGroupSel.Width - (.btgrpHelp.Width + 4), 12)
    
        icby = 4
        icbspace = 24
        
        FOR EACH cb IN MdlUsrAdd.objGrps
          'icbspace = icbspace + cb.Height + 4
          IF icbspace >= .fGroupSel.Height * 0.75 THEN 
            icby = icby + 128
            icbspace = 24
          END IF
          cb.Move(icby, icbspace)
          icbspace = icbspace + cb.Height + 4
    NEXT
    
 
        
      
        
    
    '     FOR EACH tl IN otl
    '   IF tl.width > iboxleft THEN 
    '     iboxleft = tl.Left + tl.Width + 8
    '   END IF
    ' NEXT 
          
          
          'FOR EACH tb IN otb
            
    ' ' '   FOR EACH cb IN MdlUsrAdd.objGrps
    ' ' '     
    ' ' '     'icbspace = icbspace + cb.Width + 4
    ' ' '       IF icbspace >= .fGroupSel.Width * 0.75 THEN 
    ' ' '         icby = icby + cb.Height * 2
    ' ' '         icbspace = 4
    ' ' '       END IF
    ' ' '          cb.Move(icbspace, icby)
    ' ' '          icbspace = icbspace + cb.Width + 4
    ' ' '          
    ' ' ' NEXT 
        
        
        
    
  
    
END WITH 

END

PUBLIC SUB tbUsername_KeyPress()

  

END



PUBLIC SUB bUsePic_Click()

  WITH ME
    .tbPicPath.Visible = bUsePic.Value
    .btBrowse.Visible = .bUsePic.Value
  END WITH 

END

PUBLIC SUB Form_Menu()

  MdlUsrAdd.DISPLAY_USER_GROUP_OPTIONS()

END

PUBLIC SUB btBrowse_Click()
'ClsGlobal.sTargetMnt = "/"
  'IF Dialog.OpenFile() THEN RETURN 
    Dialog.Title = ("Select picture for user Login")
    Dialog.path = ClsGlobal.sTargetMnt &/ "usr" &/ "share" &/ "apps" &/ "kdm" &/ "pics" &/ "users"
    Dialog.Filter = ["*.png", "Picture Files", "*.jpg", "JPEG Graphics"]
    IF Dialog.OpenFile() THEN RETURN 
    tbPicPath.text = Replace(Dialog.path, ClsGlobal.sSourceMnt, "")
    ME.pbUsrPic.Picture = Picture[Dialog.Path]
    
'  END IF

END

PUBLIC SUB btClrFrm_Click()
DIM cb AS CheckBox

  WITH ME
    .tbPasswd1.Clear
    .tbPasswd2.Clear
    .tbRealname.Clear
    .tbPicPath.Clear
    .tbUsername.Clear
  END WITH 
    FOR EACH cb IN MdlUsrAdd.objGrps
      cb.Delete
    NEXT 
    MdlUsrAdd.DISPLAY_USER_GROUP_OPTIONS

END

PUBLIC SUB tbPasswd2_LostFocus()

  ' run a test here to see if passwords match
    IF tbPasswd1.Text <> tbPasswd2.Text THEN 
      Message.Error(("Your password selections do not match. Please enter the same password twice"))
    END IF
    STOP EVENT 

END

PUBLIC SUB tbUsername_KeyRelease()

  IF Key.text = Space(1) THEN 
    tbUsername.Text = Replace(tbUsername.text, Space(1), "")
  END IF

END

PUBLIC SUB btBrowse_Enter()

  'Balloon.Info("Test message in a ballooon control here", fGroupSel)

END

PUBLIC SUB btgrpHelp_Click()

  DIM sMsg AS String = "<h3>" & fGroupSel.Text & "</h3>" & "<br><br>" &
  ("Groups are a way of administering permissions for your users. You grant the user") & "<br>" &
  ("permission to do certain things by adding them to certain groups.") & "<br><br>" &
  ("Select which groups you want this user to be a part of here")
  Message(sMsg, ("OK"))

END
