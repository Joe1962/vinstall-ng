' Gambas module file

'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.

PRIVATE cbarr AS Object[]
PRIVATE sText AS String
PUBLIC txtAppends AS Object[]
PUBLIC tlappends AS Object[]
PUBLIC txtNames AS Object[]
PUBLIC txtInitrds AS Object[]
PUBLIC iAppendLeft AS Integer
PUBLIC cbWins AS Object[]
PUBLIC bVlCliOption AS Boolean
PUBLIC bIncluded AS Object[]
PUBLIC arrWinInstalls AS Object[]
PUBLIC arrWinLabels AS Object[]
PRIVATE sTmpTxt AS String
PUBLIC iVlTag AS Integer

PUBLIC SUB LIST_WIN_INSTALL_CHOICES(iCurrentTabCnt AS Integer)
  DIM sFatList AS String
  DIM arrFat AS String[]
  DIM sNTFSLst AS String
  DIM arrNTFS AS String[]
  DIM iTotalEntries AS Integer
  DIM i AS Integer
  DIM cb AS CheckBox
  DIM tl AS TextLabel
  DIM tb AS TextBox
  DIM sWinPart AS String
  DIM sWinAddr AS String
  DIM idx AS Integer
  
    ' I'd like to verify that there is actually a windows isntall there... rather than simply listing every partition
  ' But I guess listing partitions will do for now
  
  
  arrWinInstalls = NEW Object[]
  arrWinLabels = NEW Object[]
  ' ' ' ' ' ' ' ' ' ' ' SHELL "fdisk -l | grep -E \'^/dev/.* \\* .*(FAT16)\' | cut -f 1 -d \' \'" TO sFatList
  ' ' ' ' ' ' ' ' ' ' '   sFatList = Trim(sFatList)
  ' ' ' ' ' ' ' ' ' ' '     IF sFatList <> "" THEN 
  ' ' ' ' ' ' ' ' ' ' '       arrFat = Split(sFatList, "\n")
  ' ' ' ' ' ' ' ' ' ' '       iTotalEntries = iTotalEntries + (arrFat.count - 1)
  ' ' ' ' ' ' ' ' ' ' '           FOR i = 0 TO arrFat.Count - 1
  ' ' ' ' ' ' ' ' ' ' '               sWinPart = Trim(arrFat[i])
  ' ' ' ' ' ' ' ' ' ' '               sWinAddr = Right(sWinPart, Len(sWinPart) - RInStr(sWinPart, "/"))
  ' ' ' ' ' ' ' ' ' ' '                 WITH FrmLilo.TabStrip1
  ' ' ' ' ' ' ' ' ' ' '                   .count = .count + 1
  ' ' ' ' ' ' ' ' ' ' '                   .text = "Windows-" & sWinAddr
  ' ' ' ' ' ' ' ' ' ' '                   .Tag = sWinPart
  ' ' ' ' ' ' ' ' ' ' '                   ' now populate it with the necessary stuff
  ' ' ' ' ' ' ' ' ' ' '                     tl = NEW TextLabel(FrmLilo.TabStrip1) AS "WinBanner"
  ' ' ' ' ' ' ' ' ' ' '                       WITH tl
  ' ' ' ' ' ' ' ' ' ' '                         .text = "<b>" & ("Windows installation found in") & Space(1) & sWinPart & "</b>"
  ' ' ' ' ' ' ' ' ' ' '                         .Move(4, 16, MdlObjSizer.get_object_width(.text) + 24, 27)
  ' ' ' ' ' ' ' ' ' ' '                         .Alignment = Align.Normal
  ' ' ' ' ' ' ' ' ' ' '                         .BackColor = Color.Background
  ' ' ' ' ' ' ' ' ' ' '                       END WITH 
  ' ' ' ' ' ' ' ' ' ' '                       
  ' ' ' ' ' ' ' ' ' ' '                     tl = NEW TextLabel(FrmLilo.TabStrip1) AS "WinName"
  ' ' ' ' ' ' ' ' ' ' '                       WITH tl
  ' ' ' ' ' ' ' ' ' ' '                         .text = ("Name ")
  ' ' ' ' ' ' ' ' ' ' '                         .Move(tl.left, tl.top + tl.height + 8, MdlObjSizer.get_object_width(.text) + 8, 27)
  ' ' ' ' ' ' ' ' ' ' '                         .Alignment = Align.Normal
  ' ' ' ' ' ' ' ' ' ' '                         .BackColor = Color.Background
  ' ' ' ' ' ' ' ' ' ' '                       END WITH 
  ' ' ' ' ' ' ' ' ' ' '                     
  ' ' ' ' ' ' ' ' ' ' '                     tb = NEW TextBox(FrmLilo.TabStrip1) AS "WinNameBox"
  ' ' ' ' ' ' ' ' ' ' '                       WITH tb
  ' ' ' ' ' ' ' ' ' ' '                         .text = FrmLilo.TabStrip1.Current.Text
  ' ' ' ' ' ' ' ' ' ' '                         .MaxLength = 15
  ' ' ' ' ' ' ' ' ' ' '                         .Height = 27
  ' ' ' ' ' ' ' ' ' ' '                         .Width = MdlObjSizer.get_object_width(.text) * 2
  ' ' ' ' ' ' ' ' ' ' '                         .Move(tl.left + tl.Width + 8, tl.top)                          
  ' ' ' ' ' ' ' ' ' ' '                         .BackColor = Color.Background
  ' ' ' ' ' ' ' ' ' ' '                       END WITH 
  ' ' ' ' ' ' ' ' ' ' '                         
  ' ' ' ' ' ' ' ' ' ' '                     
  ' ' ' ' ' ' ' ' ' ' '                     cb = NEW CheckBox(FrmLilo.TabStrip1) AS "WinInclude"
  ' ' ' ' ' ' ' ' ' ' '                       WITH cb
  ' ' ' ' ' ' ' ' ' ' '                         .text = ("Include this Operating System in the boot menu")
  ' ' ' ' ' ' ' ' ' ' '                         .Move(tl.left, tl.top + tl.height, MdlObjSizer.get_object_width(.text) + 36, 27)
  ' ' ' ' ' ' ' ' ' ' '                         .Value = TRUE
  ' ' ' ' ' ' ' ' ' ' '                         .BackColor = Color.Background
  ' ' ' ' ' ' ' ' ' ' '                         .tag = sWinPart
  ' ' ' ' ' ' ' ' ' ' '                       END WITH 
  ' ' ' ' ' ' ' ' ' ' '                       arrWinInstalls.Add(cb) ' add to the array to find out wether to include or not in the boot menu
  ' ' ' ' ' ' ' ' ' ' '                       
  ' ' ' ' ' ' ' ' ' ' '                END WITH ' end jacking with the tabstrip
  ' ' ' ' ' ' ' ' ' ' '           NEXT                   
  ' ' ' ' ' ' ' ' ' ' '     END IF
  'SHELL "fdisk -l| grep -E \'^/dev/.* * .*(FAT32|HPFS|NTFS|Win)\' | cut -f 1 -d \' \'" TO sNTFSLst
  SHELL "fdisk -l| grep -E \'^/dev/.* * .*(FAT16|FAT32|HPFS|NTFS|Win)\' | cut -f 1 -d \' \'" TO sNTFSLst
    sNTFSLst = Trim(sNTFSLst)
      'Message(sNTFSLst)
      IF sNTFSLst <> "" THEN 
        arrNTFS = Split(sNTFSLst, "\n")
        iTotalEntries = iTotalEntries + (arrNTFS.Count - 1)
      'ELSE 
      'END IF
  
    
    FOR i = 0 TO arrNTFS.count - 1
      idx = FrmLilo.tsOsSetup.count - 1
      sWinPart = arrNTFS[i]
      sWinAddr = Right(arrNTFS[i], Len(arrNTFS[i]) - RInStr(arrNTFS[i], "/"))
          'sHELL "mkdir /mnt" &/ sWinAddr WAIT 
          TRY MKDIR "/mnt" &/ sWinAddr
          PRINT "mounting " & sWinAddr
          'SHELL "mount " & "/dev" &/ sWinAddr & Space(1) & "/mnt" &/ sWinAddr WAIT 
          EXEC ["mount", "/dev" &/ sWinAddr, "/mnt" &/ sWinAddr] WAIT 
            'IF Exist("/mnt" &/ sWinAddr &/ "windows" &/ "system32" &/ "winver.exe") OR IF IsDir("/mnt" &/ sWinAddr &/ "winnt") = TRUE THEN 'Exist("/mnt" &/ sWinAddr &/ "winnt" &/ "system32" &/ "winver.exe") THEN 
            'IF IsDir("/mnt" &/ sWinAddr &/ "windows") = TRUE THEN 
            IF IsDir("/mnt" &/ sWinAddr &/ "windows") OR IF IsDir("/mnt" &/ sWinAddr &/ "WINDOWS") OR IF IsDir("/mnt" &/ sWinAddr &/ "winnt") OR IF IsDir("/mnt" &/ sWinAddr &/ "WINNT") = TRUE THEN
              ' this is indeed a windows installation
                   
                  WITH FrmLilo.tsOsSetup
                    .count = .count + 1
                    .index = idx
                    .text = "Windows-" & sWinAddr
                    ' Populate the new windows tab with just one
                      tl = NEW TextLabel(FrmLilo.tsOsSetup) AS "WinPartLbl"
                        WITH tl
                          .Move(4, 24)
                          .text = "<b>" & ("Windows installation found in") & Space(1) & sWinPart & "</b>"
                          .Height = 27
                          .Width = MdlObjSizer.get_object_width(.text)
                          .BackColor = Color.Background
                        END WITH 
                          
                      cb = NEW CheckBox(FrmLilo.tsOsSetup) AS "bIncludeThisWin"
                        WITH cb
                          .Move(4, tl.top + tl.Height + 12)
                          .tag = sWinPart
                          .text = ("Include this installation in the boot menu")
                          .Width = MdlObjSizer.get_object_width(.text) + 36
                          .Height = 24
                          .BackColor = Color.Background
                          .Value = TRUE
                        END WITH 
                          arrWinInstalls.Add(cb) ' add to the array
                      tl = NEW TextLabel(FrmLilo.tsOsSetup) AS "WinLblLbl"
                        WITH tl
                        .text = ("Label")
                        .MOVE(4, cb.top + cb.Height + 4, MdlObjSizer.get_object_width(.text), 27)
                        .BackColor = Color.Background
                        .Alignment = Align.Normal
                        END WITH 
                      tb = NEW TextBox(FrmLilo.tsOsSetup) AS "WinLbl"
                        WITH tb
                          .text = "Windows-" & sWinAddr
                          .Move(tl.left + tl.Width + 4, tl.top, 200, 27)
                          .MaxLength = 15
                          .tag = sWinPart
                        END WITH 
                          arrWinLabels.Add(tb)
                          
                        
                      
                  END WITH 
            END IF
        ' now, unmount the partition
        SHELL "umount /mnt" &/ sWinAddr WAIT 
        ' I guess it's ok to leave the dir in there, since all of this will dissapear after the insallation is done
        
    NEXT 

  END IF
  
  
  
  
  
END

PUBLIC SUB WinLbl_keyrelease()
  
  LAST.text = Replace(LAST.text, " ", "")
  ME.list_boot_options
END



PUBLIC SUB bIncludeThisWin_click()
  DIM tb AS TextBox
  IF LAST.value = TRUE THEN 
    FOR EACH tb IN arrWinLabels
      IF tb.tag = LAST.tag THEN tb.Enabled = TRUE
    NEXT 
  ELSE IF LAST.value = FALSE THEN 
    FOR EACH tb IN arrWinLabels
      IF tb.tag = LAST.tag THEN tb.Enabled = FALSE
    NEXT 
  END IF
  'PRINT LAST.tag
  ME.list_boot_options
END




PUBLIC SUB LIST_LILO_OS_CHOICES()
  
  
  DIM sLinuxList, sDump AS String
  DIM arrLinux, arrDump AS String[]
  DIM i, ii AS Integer
  DIM sLiloLabel AS String
  DIM sLiloDesc AS String
  DIM svmLinuz AS String
  DIM cbLiloItem AS CheckBox
  DIM x, y AS Integer
  DIM ibtX AS Integer
  DIM txtAppnd AS TextBox
  DIM cbInclude AS CheckBox
  DIM tl AS TextLabel
  DIM sShortAddr AS String
  DIM iwidth AS Integer = FrmLilo.tsOsSetup.Width
  DIM cb AS ComboBox
  DIM tb AS TextBox
  
  x = 4
  y = 4
  
txtAppends = NEW Object[]  
txtNames = NEW Object[]
txtInitrds = NEW Object[]
bIncluded = NEW Object[]
tlappends = NEW Object[]
  'FrmLilo.TabStrip1.Count = 1
  
  cbarr = NEW Object[]
  
  'ME.bVlCliOption = FALSE
  SHELL "fdisk -l |grep -E \'83 *Linux\' | cut -f 1 -d \' \'" TO sLinuxList
    'sLinuxList = Trim(sLinuxList)
    
    'RETURN 
      IF sLinuxList <> "" THEN 
        arrLinux = Split(sLinuxList, "\n")
      END IF
      
    'FOR TESTING PURPOSES, ONLY DO THE LINUX DRIVES
      'create a temporary monunt dir
      TRY MKDIR "/tmp/lilo_tmp"
    FOR i = 0 TO arrLinux.Count - 1
      IF arrLinux[i] <> "" THEN 
      sShortAddr = Right(arrLinux[i], Len(arrLinux[i]) - RInStr(arrLinux[i], "/"))
        PRINT "scanning " & arrLinux[i]
        PRINT "mount " & arrLinux[i] & Space(1) & "/tmp/lilo_tmp"
      'SHELL "mount " & arrLinux[i] & Space(1) & "/tmp/lilo_tmp" WAIT 
      EXEC ["mount", arrLinux[i], "/tmp/lilo_tmp"] WAIT 
      
        ' now check for a vmlinuz
        'IF Exist("/tmp/lilo_tmp/boot/vmlinuz*") = TRUE THEN 
        'EXEC ["ls", "-l", "/tmp/lilo_tmp/boot/vmlinuz*"] TO sDump
        SHELL "ls -1 /tmp/lilo_tmp/boot/vmlinuz* | grep -v \'@\'" TO sDump
        Message(sDump)
            sDump = Trim(sDump)
            arrDump = Split(sDump, "\n")
            
            FOR ii = 0 TO arrDump.Count - 1
                  FrmLilo.tsOsSetup.Count = FrmLilo.tsOsSetup.count + 1 'arrLinux.Count - 1
          
        sLiloDesc = ME.ID_DISTRO("/tmp/lilo_tmp")
        
        WITH FrmLilo.tsOsSetup
            .Index = FrmLilo.tsOsSetup.count - 1
            IF arrLinux[i] = ClsPartSel.sRoot THEN
            .text = "Linux"
            ELSE 
            .text = sLiloDesc & "-" & sShortAddr
            ENDIF 
          tl = NEW TextLabel(FrmLilo.tsOsSetup) AS "OSIntro"
            WITH tl
              .text = "<b>" & ("Operating system installed in") & Space(1) & arrLinux[i] & "</b> "
              .Move(4, 16, MdlObjSizer.get_object_width(.text) + 4, 27)
              '.BackColor = Color.SelectedBackground
              .Alignment = Align.Normal
              .Background = Color.Background
              '.ForeColor = Color.SelectedForeground
            END WITH 
              
              
          
            cbInclude = NEW CheckBox(FrmLilo.tsOsSetup) AS "IncludeOS"
              WITH cbInclude
                .text = ("Include this operating system in the boot menu")
                .Height = 27
                .Value = TRUE
                .Move(4, tl.top + tl.Height + 4, MdlObjSizer.get_object_width(.text) + 24)
                .tag = arrLinux[i]
                .Background = Color.Background
              END WITH 
              ME.bIncluded.Add(cbInclude)
          
            tl = NEW TextLabel(FrmLilo.tsOsSetup) AS "Label"
              WITH tl
                .text = ("Name")
                .Move(cbInclude.left, cbInclude.top + cbInclude.Height + 4, MdlObjSizer.get_object_width(.text))
                .Height = 27
                .Alignment = Align.Normal
                .Background = Color.Background
              END WITH 
            txtAppnd = NEW TextBox(FrmLilo.tsOsSetup) AS "NameBox"
              WITH txtAppnd
                .Width = tl.Width * 4
                .Height = tl.Height
                .text = FrmLilo.tsOsSetup.Current.text 'sLiloDesc
                .x = tl.left + tl.Width + 8
                .y = tl.Top
                .MaxLength = 15
                .tag = arrLinux[i]
                
              END WITH 
              txtNames.Add(txtAppnd)
              
            tl = NEW TextLabel(FrmLilo.tsOsSetup) AS "InitdLbl"
              WITH tl
                .text = ("Initial Ram Disk")
                .Move(txtAppnd.Left + txtAppnd.Width + 8, txtAppnd.top, MdlObjSizer.get_object_width(.text))
                .Height = 27
                .Alignment = Align.Normal
                .Background = Color.Background
                .Visible = FALSE
              END WITH 
              
            txtAppnd = NEW TextBox(FrmLilo.tsOsSetup) AS "initrdBox"
              WITH txtAppnd
                
                .Move(tl.Left + tl.Width + 4, tl.top, 250, 27)
                .tag = arrLinux[i]
                  IF .tag = ClsPartSel.sRoot THEN 
                    .text = "initrd"
                  ELSE 
                   .text = "initrd-" & sShortAddr
                  END IF
                .Visible = FALSE
                iwidth = .Width
              END WITH
                ME.txtInitrds.Add(txtAppnd)
        
            tl = NEW TextLabel(FrmLilo.tsOsSetup) AS "AppndLbl"
              WITH tl
                .text = ("Kernel boot options")
                .Move(4, txtAppnd.top + txtAppnd.Height + 4, MdlObjSizer.get_object_width(.text))
                .Height = 27
                .Alignment = Align.Normal
                .Background = Color.Background
                .tag = arrLinux[i]
                ME.iAppendLeft = .x + .Width + 4
                
              END WITH 
                tlappends.Add(tl)
              txtAppnd = NEW TextBox(FrmLilo.tsOsSetup) AS "AppendBox"
              WITH txtAppnd
                
                '.Move(tl.Left + tl.Width + 8, tl.top, tl.Width * 1.25)
                '.Move(iAppendLeft, tl.top, iwidth - iAppendLeft - 4)
                '.Move(4, tl.top + tl.Height + 4, FrmLilo.TabStrip1.Width - (.left * 2))
                '.Move(tl.left + tl.Width + 4, tl.top, tl.Width)
                .Move(tl.left + tl.Width + 4, tl.top, tl.Width * 0.5)
                .Height = 27
                .tag = arrLinux[i]
                txtAppends.Add(txtAppnd)
              END WITH 
            
          
          ' Add an option to boot the recently installed OS to CLI mode
          'ClsPartSel.sRoot = "/dev/sdb" ' for testing only 
            'IF sLiloDesc LIKE "Vector" THEN 
            'IF Application.Args[1] = "" THEN 
            
              FOR EACH cb IN MdlPartSel.oMountPoints
                IF cb.text = "/" AND cb.tag = arrLinux[i] THEN
                ClsLilo.sRootInstall = cb.Tag
                'FrmLilo.cbDefBoot.Add("Linux-tui")
              'IF arrLinux[i] = ClsPartSel.sRoot THEN 
                cbInclude = NEW CheckBox(FrmLilo.tsOsSetup) AS "VlCliOption"
                  WITH cbInclude
                    .Value = TRUE
                    .text = ("Add option to boot this Operating system into Text mode.")
                    .Width = MdlObjSizer.get_object_width(.text) + 36
                    .Height = 27
                    .Move(4, tl.top + tl.Height + 4)
                    .tag = arrLinux[i]
                    .Background = Color.Background
                    'Message(.tag)
                        'FOR EACH tb IN txtNames
                        'Message(tb.tag & "<br>" & tb.Text)
                        'message
                          'IF Trim(tb.tag) = Trim(.tag) THEN 
                          'Message(tb.tag)
                           '   IF FrmLilo.cbDefBoot.Find(Trim(tb.Text & "-tui")) = -1 THEN 
                                'FrmLilo.cbDefBoot.Add(tb.text & "-tui")
                         '       FrmLilo.cbDefBoot.Add(Trim(tb.text) & "-tui")
                          '    END IF
                          'FrmLilo.cbDefBoot.Add("Linux-tui")
'                          END IF
'                        NEXT 
                  END WITH 
                  'FrmLilo.cbDefBoot.Add("Linux-tui")
                  ME.iVlTag = FrmLilo.tsOsSetup.Index - 1
              END IF
            NEXT 
            
        'ELSE 
                ' DETECT THE FILESYSTEM ON THE ROOT PARTITION HERE
                
                
        'END IF
            
            
            
            'END IF          
        END WITH ' end jacking with the tabstrip itself
     'END IF
 '    SHELL "umount /tmp/lilo_tmp" WAIT 
 NEXT 
 EXEC ["umount", "/tmp/lilo_tmp"] WAIT 
 'NEXT 
    END IF
    
    NEXT 

'NEXT ' next in dump
    
    
    FOR i = 0 TO FrmLilo.tsOsSetup.Count - 1
      WITH FrmLilo.tsOsSetup
        .Index = i
          IF .Children.Count < 1 THEN 
            FrmLilo.tsOsSetup[i].Visible = FALSE
          END IF
      END WITH 
    NEXT 
      
        
  
  
END


PUBLIC SUB list_boot_options()
  DIM tb AS TextBox
  DIM cb AS CheckBox
  
  FrmLilo.cbDefBoot.Clear()
  
  FOR EACH cb IN ME.bIncluded
    IF cb.Value = TRUE THEN 
      FOR EACH tb IN ME.txtNames
        IF tb.tag = cb.tag THEN 
          IF FrmLilo.cbDefBoot.Find(tb.text) = -1 THEN 
          FrmLilo.cbDefBoot.Add(tb.text)
          END IF
        END IF
      NEXT 
    ELSE IF cb.Value = FALSE THEN 
        FOR EACH tb IN ME.txtNames
          IF FrmLilo.cbDefBoot.Find(Trim(tb.text)) <> -1 THEN 
            FrmLilo.cbDefBoot.Remove(FrmLilo.cbDefBoot.Find(Trim(tb.text)))
          END IF
        NEXT 
    END IF
  NEXT 
  
  
END




PUBLIC SUB VlCliOption_click()
    DIM tb AS TextBox
  'bVlCliOption = LAST
  IF LAST.value = TRUE THEN 
    bVlCliOption = TRUE
  ELSE 
    bVlCliOption = FALSE
  END IF
  
    FOR EACH tb IN ME.txtNames
      IF tb.tag = LAST.tag THEN 
        IF bVlCliOption = TRUE THEN 
          IF FrmLilo.cbDefBoot.Find(tb.text & "-tui") = -1 THEN 
            FrmLilo.cbDefBoot.Add(tb.text & "-tui")
          END IF
        ELSE 
          IF FrmLilo.cbDefBoot.Find(tb.text & "-tui") <> -1 THEN 
            FrmLilo.cbDefBoot.Remove(FrmLilo.cbDefBoot.Find(tb.text & "-tui"))
          END IF
        END IF
      END IF
    NEXT 
  
  
  'PRINT bVlCliOption
  
END


PUBLIC SUB IncludeOs_click()

  'ME.list_boot_options()
      IF LAST.value = TRUE THEN 
        IF FrmLilo.cbDefBoot.Find(FrmLilo.tsOsSetup.text) = -1 THEN FrmLilo.cbDefBoot.Add(FrmLilo.tsOsSetup.text)
      ELSE 
        IF FrmLilo.cbDefBoot.Find(FrmLilo.tsOsSetup.text) <> -1 THEN FrmLilo.cbDefBoot.Remove(FrmLilo.cbDefBoot.Find(FrmLilo.tsOsSetup.text))
      END IF
      
  
END

PUBLIC SUB NameBox_keyrelease()
  
    LAST.text = Replace(LAST.text, " ", "")
    'FrmLilo.TabStrip1.text = LAST.text
    ME.list_boot_options
    
  
END


PUBLIC SUB OsList_click()


END


PUBLIC FUNCTION ID_DISTRO(sWhereIsItMounted AS String) AS String
  
  DIM sBasePath AS String = sWhereIsItMounted &/ "etc"
  DIM sDesc AS String
      
      IF Exist(sBasePath &/ "vector-version") THEN 
        sDesc = "Vector"
      ELSE IF Exist(sBasePath &/ "sysconfig" &/ "vector") THEN 
        sDesc = "Vector"
      ELSE IF Exist(sBasePath &/ "slackware-version") THEN 
        sDesc = "Slackware"
      ELSE IF Exist(sBasePath &/ "Suse-release") OR Exist(sBasePath &/ "UnitedLinux-release") THEN 
        sDesc = "SuSe"
      ELSE IF Exist(sBasePath &/ "gentoo-release") THEN 
        sDesc = "Gentoo"
      ELSE IF Exist(sBasePath &/ "debian_version") THEN 
          SHELL "grep -m 1 cdrom " & sBasePath &/ "apt" &/ "sources.list | cut -d \"[\" -f2 | cut -d \" \" -f 1,2" TO sDesc
            sDesc = Trim(sDesc)
              IF sDesc <> ""
                  sDesc = Replace(sDesc, " ", "_")
              ELSE 
                  sDesc = "Debian"
          END IF
      ELSE IF Exist(sBasePath &/ "mandrake-release") THEN 
        sDesc = "Makdrake"
      ELSE IF Exist(sBasePath &/ "redhat-release") THEN 
        sDesc = "RedHat"
      ELSE IF Exist(sBasePath &/ "fedora-release") THEN 
        sDesc = "Fedora"
      ELSE 
        sDesc = "Linux"
      END IF
      RETURN sDesc
  
END
