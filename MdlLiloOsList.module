' Gambas module file

'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.

PRIVATE cbarr AS Object[]
PRIVATE sText AS String
PUBLIC txtAppends AS Object[]
PUBLIC txtNames AS Object[]
PUBLIC txtInitrds AS Object[]
PUBLIC iAppendLeft AS Integer
PUBLIC cbWins AS Object[]
PUBLIC bVlCliOption AS Boolean
PUBLIC bIncluded AS Object[]

PUBLIC SUB LIST_WIN_INSTALL_CHOICES(iCurrentTabCnt AS Integer)
  DIM sFatList AS String
  DIM arrFat AS String[]
  DIM sNTFSLst AS String
  DIM arrNTFS AS String[]
  DIM iTotalEntries AS Integer
  DIM i AS Integer
  DIM cb AS CheckBox
  DIM tl AS TextLabel
  DIM tb AS TextBox
  DIM sWinPart AS String
  DIM sWinAddr AS String
  DIM idx AS Integer
  
    ' I'd like to verify that there is actually a windows isntall there... rather than simply listing every partition
  ' But I guess listing partitions will do for now
  
  
  
  SHELL "fdisk -l | grep -E \'^/dev/.* \\* .*(FAT16)\' | cut -f 1 -d \' \'" TO sFatList
    sFatList = Trim(sFatList)
      IF sFatList <> "" THEN 
        arrFat = Split(sFatList, "\n")
        iTotalEntries = iTotalEntries + (arrFat.count - 1)
            FOR i = 0 TO arrFat.Count - 1
                sWinPart = Trim(arrFat[i])
                sWinAddr = Right(sWinPart, Len(sWinPart) - RInStr(sWinPart, "/"))
                  WITH FrmLilo.TabStrip1
                    .count = .count + 1
                    .text = "Windows-" & sWinAddr
                    .Tag = sWinPart
                    ' now populate it with the necessary stuff
                      tl = NEW TextLabel(FrmLilo.TabStrip1) AS "WinBanner"
                        WITH tl
                          .text = "Operating system found in " & sWinPart
                          .Move(4, 12, MdlObjSizer.get_object_width(.text) + 24, 27)
                          .Alignment = Align.Normal
                        END WITH 
                        
                      tl = NEW TextLabel(FrmLilo.TabStrip1) AS "WinName"
                        WITH tl
                          .text = "Name "
                          .Move(tl.left, tl.top + tl.height + 8, MdlObjSizer.get_object_width(.text) + 8, 27)
                          .Alignment = Align.Normal
                        END WITH 
                      
                      tb = NEW TextBox(FrmLilo.TabStrip1) AS "WinNameBox"
                        WITH tb
                          .text = FrmLilo.TabStrip1.Current.Text
                          .MaxLength = 15
                          .Height = 27
                          .Width = MdlObjSizer.get_object_width(.text) * 2
                          .Move(tl.left + tl.Width + 8, tl.top)
                        END WITH 
                          
                      
                      cb = NEW CheckBox(FrmLilo.TabStrip1) AS "WinInclude"
                        WITH cb
                          .text = "Include this Operating System in the boot menu"
                          .Move(tl.left, tl.top + tl.height, MdlObjSizer.get_object_width(.text) + 36, 27)
                          .Value = TRUE
                        END WITH 
                 END WITH ' end jacking with the tabstrip
            NEXT                   
      END IF
  SHELL "fdisk -l| grep -E \'^/dev/.* * .*(FAT32|HPFS|NTFS|Win)\' | cut -f 1 -d \' \'" TO sNTFSLst
    sNTFSLst = Trim(sNTFSLst)
      'Message(sNTFSLst)
      IF sNTFSLst <> "" THEN 
        arrNTFS = Split(sNTFSLst, "\n")
        iTotalEntries = iTotalEntries + (arrNTFS.Count - 1)
      END IF
  
    
    FOR i = 0 TO arrNTFS.count - 1
      idx = FrmLilo.TabStrip1.count - 1
     
      WITH FrmLilo.TabStrip1
        .count = .count + 1
        .index = idx
        .text = "Windows"
      END WITH 
    NEXT 

  
END



PUBLIC SUB LIST_LILO_OS_CHOICES()
  
  
  DIM sLinuxList AS String
  DIM arrLinux AS String[]
  DIM i AS Integer
  DIM sLiloLabel AS String
  DIM sLiloDesc AS String
  DIM svmLinuz AS String
  DIM cbLiloItem AS CheckBox
  DIM x, y AS Integer
  DIM ibtX AS Integer
  DIM txtAppnd AS TextBox
  DIM cbInclude AS CheckBox
  DIM tl AS TextLabel
  DIM sShortAddr AS String
  x = 4
  y = 4
  
txtAppends = NEW Object[]  
txtNames = NEW Object[]
txtInitrds = NEW Object[]
bIncluded = NEW Object[]
  'FrmLilo.TabStrip1.Count = 1
  
  cbarr = NEW Object[]
  
  SHELL "fdisk -l |grep -E \'83 *Linux\' | cut -f 1 -d \' \'" TO sLinuxList
    'sLinuxList = Trim(sLinuxList)
    
    'RETURN 
      IF sLinuxList <> "" THEN 
        arrLinux = Split(sLinuxList, "\n")
      END IF
      
    'FOR TESTING PURPOSES, ONLY DO THE LINUX DRIVES
      'create a temporary monunt dir
      TRY MKDIR "/tmp/lilo_tmp"
    FOR i = 0 TO arrLinux.Count - 1
      sShortAddr = Right(arrLinux[i], Len(arrLinux[i]) - RInStr(arrLinux[i], "/"))
      SHELL "mount " & arrLinux[i] & Space(1) & "/tmp/lilo_tmp" WAIT 
        ' now check for a vmlinuz
        IF Exist("/tmp/lilo_tmp/boot/vmlinuz") = TRUE THEN 
          FrmLilo.TabStrip1.Count = FrmLilo.TabStrip1.count + 1 'arrLinux.Count - 1
          
        sLiloDesc = ME.ID_DISTRO("/tmp/lilo_tmp")
          
        WITH FrmLilo.TabStrip1
            .Index = i
            .text = sLiloDesc & "-" & sShortAddr
          tl = NEW TextLabel(FrmLilo.TabStrip1) AS "OSIntro"
            WITH tl
              .text = "<b>Operating system installed in " & arrLinux[i] & "</b>"
              .Move(4, 16, MdlObjSizer.get_object_width(.text) + 4, 27)
              '.BackColor = Color.SelectedBackground
              .Alignment = Align.Normal
              .Background = Color.Background
              '.ForeColor = Color.SelectedForeground
            END WITH 
              
              
          
            cbInclude = NEW CheckBox(FrmLilo.TabStrip1) AS "IncludeOS"
              WITH cbInclude
                .text = "Include this operating system in the boot menu"
                .Height = 27
                .Value = TRUE
                .Move(4, tl.top + tl.Height + 4, MdlObjSizer.get_object_width(.text) + 24)
                .tag = arrLinux[i]
                .Background = Color.Background
              END WITH 
              ME.bIncluded.Add(cbInclude)
          
            tl = NEW TextLabel(FrmLilo.TabStrip1) AS "Label"
              WITH tl
                .text = "Name"
                .Move(cbInclude.left, cbInclude.top + cbInclude.Height + 4, MdlObjSizer.get_object_width(.text))
                .Height = 27
                .Alignment = Align.Normal
                .Background = Color.Background
              END WITH 
            txtAppnd = NEW TextBox(FrmLilo.TabStrip1) AS "NameBox"
              WITH txtAppnd
                .Width = tl.Width * 4
                .text = FrmLilo.TabStrip1.Current.text 'sLiloDesc
                .Height = tl.Height
                .x = tl.left + tl.Width + 8
                .y = tl.Top
                .MaxLength = 15
                .tag = arrLinux[i]
                
              END WITH 
              txtNames.Add(txtAppnd)
              
            tl = NEW TextLabel(FrmLilo.TabStrip1) AS "InitdLbl"
              WITH tl
                .text = "Initial Ram Disk"
                .Move(txtAppnd.Left + txtAppnd.Width + 8, txtAppnd.top, MdlObjSizer.get_object_width(.text))
                .Height = 27
                .Alignment = Align.Normal
                .Background = Color.Background
              END WITH 
              
            txtAppnd = NEW TextBox(FrmLilo.TabStrip1) AS "initrdBox"
              WITH txtAppnd
                .text = "initrd-" & sShortAddr
                .Move(tl.Left + tl.Width + 4, tl.top, 250, 27)
                .tag = arrLinux[i]
              END WITH
                ME.txtInitrds.Add(txtAppnd)
        
            tl = NEW TextLabel(FrmLilo.TabStrip1) AS "AppndLbl"
              WITH tl
                .text = "Kernel boot options"
                .Move(4, txtAppnd.top + txtAppnd.Height + 4, MdlObjSizer.get_object_width(.text))
                .Height = 27
                .Alignment = Align.Normal
                .Background = Color.Background
                
                ME.iAppendLeft = .x + .Width + 4
                
              END WITH 
              
              txtAppnd = NEW TextBox(FrmLilo.TabStrip1) AS "AppendBox"
              WITH txtAppnd
                
                .Move(tl.Left + tl.Width + 8, tl.top, FrmLilo.TabStrip1.Width - (tl.Width * 1.5))
                
                .Height = 27
                .tag = arrLinux[i]
                txtAppends.Add(txtAppnd)
              END WITH 
            
          
          ' Add an option to boot the recently installed OS to CLI mode
          ClsPartSel.sRoot = "/dev/hda6" ' for testing only 
            IF sLiloDesc LIKE "Vector" THEN 
              IF arrLinux[i] = ClsPartSel.sRoot THEN 
                cbInclude = NEW CheckBox(FrmLilo.TabStrip1) AS "VlCliOption"
                  WITH cbInclude
                    .Value = FALSE
                    .text = "Add option to boot this Operating system into Text mode"
                    .Width = MdlObjSizer.get_object_width(.text) + 36
                    .Height = 27
                    .Move(4, tl.top + tl.Height + 12)
                    .tag = arrLinux[i]
                    .Background = Color.Background
                  END WITH 
                  
              END IF
            END IF
                  
                  
          
        END WITH ' end jacking with the tabstrip itself
        
            
        END IF
        
        SHELL "umount /tmp/lilo_tmp" WAIT 
    NEXT 
        
    FOR i = 0 TO FrmLilo.TabStrip1.Count - 1
      WITH FrmLilo.TabStrip1
        .Index = i
          IF .Children.Count < 1 THEN 
            FrmLilo.TabStrip1[i].Visible = FALSE
          END IF
      END WITH 
      NEXT 
        
 
  
  
END

PUBLIC SUB VlCliOption_click()
    
  bVlCliOption = LAST.value
  PRINT bVlCliOption
  
END


PUBLIC SUB IncludeOs_click()
  IF LAST.value = FALSE THEN 
Message("Excluding " & FrmLilo.TabStrip1.Current.text & " from the boot menu")
END IF
  
  
END

PUBLIC SUB NameBox_keyrelease()
  
    
  
END



PUBLIC SUB OsList_click()


END


PUBLIC FUNCTION ID_DISTRO(sWhereIsItMounted AS String) AS String
  
  DIM sBasePath AS String = sWhereIsItMounted &/ "etc"
  DIM sDesc AS String
      
      IF Exist(sBasePath &/ "vector-version") THEN 
        sDesc = "Vector"
      ELSE IF Exist(sBasePath &/ "sysconfig" &/ "vector") THEN 
        sDesc = "Vector"
      ELSE IF Exist(sBasePath &/ "slackware-version") THEN 
        sDesc = "Slackware"
      ELSE IF Exist(sBasePath &/ "Suse-release") OR Exist(sBasePath &/ "UnitedLinux-release") THEN 
        sDesc = "SuSe"
      ELSE IF Exist(sBasePath &/ "gentoo-release") THEN 
        sDesc = "Gentoo"
      ELSE IF Exist(sBasePath &/ "debian_version") THEN 
        sDesc = "Debian"
      ELSE IF Exist(sBasePath &/ "mandrake-release") THEN 
        sDesc = "Makdrake"
      ELSE IF Exist(sBasePath &/ "redhat-release") THEN 
        sDesc = "RedHat"
      ELSE IF Exist(sBasePath &/ "fedora-release") THEN 
        sDesc = "Fedora"
      ELSE 
        sDesc = "Linux"
      END IF
      RETURN sDesc
  
END
