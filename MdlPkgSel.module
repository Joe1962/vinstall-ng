' Gambas module file

  
'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.

PUBLIC Bulks AS Object[]
PUBLIC Pkgs AS Object[]
PUBLIC SUB LIST_BULK_SELECTION()
  
  DIM cb AS CheckBox
  DIM i, ii, cby AS Integer
  DIM sFIle AS String[]
  DIM sCurrLine AS String[]
  DIM sLine, sPkg, sDesc AS String
  DIM vsize AS Variant
  DIM isize AS Integer
  
  cby = 4
  'File.Save(Temp("SETUP.CONF"), DConv(File.Load(ClsGlobal.sSourceMnt &/ "veclinux" &/ "SETUP.CONF")))
  'Message(File.Load(Temp("SETUP.CONF")))
  Bulks = NEW Object[]
    
    sFIle = Split(File.Load(Temp("SETUP.CONF")), gb.NewLine)
      FOR i = 0 TO sFIle.count - 1
        sLine = Trim(sFIle[i]) 
          IF Left(sLine, Len("BULK")) = "BULK" THEN 
            sCurrLine = Split(sLine, ":")
              'line format is File_name.tlz:Size_kb:Description
              sPkg = sCurrLine[0]
              sDesc = sCurrLine[2]
              vsize = sCurrLine[1]
                IF InStr(sDesc, "\'") THEN 
                  sDesc = Left(sDesc, Len(sDesc) - 1)
                END IF
                IF InStr(sPkg, "optional/") THEN 
                
              cb = NEW CheckBox(FrmPkgSel.scrlInstallOpts) AS "OptBulks"
                  WITH cb
                    .Text = sDesc & Space(1) & "[ " & CStr(vsize) & " KB ]"
                    .Width = MdlObjSizer.get_object_width(.Text) + 24
                    .x = 4
                    .y = cby
                    .Height = 27
                    .Tag = Right(sPkg, Len(sPkg) - InStr(sPkg, "=") - 1)
                    .Value = TRUE
                  END WITH 
                    ME.Bulks.Add(cb)
                  cby = cby + cb.Height + 4
                END IF
            END IF
        NEXT 
        
END


PUBLIC SUB LIST_PACKAGE_SELECTION()
  
    DIM cb AS CheckBox
    DIM sName, sDesc, sLoc, sSize AS String
    DIM i, y AS Integer
    DIM sRawFile AS String[]
    DIM sLine AS String
    
    ' THis one is kind of tricky.. it will read the whole PACKAGES.TXT
     y = 4
    File.Save(Temp("PACKAGES.TXT"), DConv(File.Load(ClsGlobal.sSourceMnt &/ "packages" &/ "PACKAGES.TXT")))
    'Message(File.Load(Temp("PACKAGES.TXT")))
      sRawFile = Split(File.Load(Temp("PACKAGES.TXT")), "\n")
        ME.Pkgs = NEW Object[]
        FOR i = 0 TO sRawFile.Count - 1
          sLine = Trim(sRawFile[i])
            IF InStr(sLine, "PACKAGE NAME:") THEN 
                sName = Trim(Right(sLine, Len(sLine) - InStr(sLine, ":")))
                sLoc = Trim(Right(sRawFile[i + 1], Len(sRawFile[i + 1]) - InStr(sRawFile[i + 1], ":")))
                    IF Left(sLoc, 2) = "./" THEN 
                      sLoc = Right(sLoc, Len(sLoc) - 2)
                    END IF
                sSize = Trim(Right(sRawFile[i + 2], Len(sRawFile[i + 2]) - InStr(sRawFile[i + 2], ":")))
                'Message(sName & " in " & sLoc)
              cb = NEW CheckBox(FrmPkgsel2.scrPkgs) AS "Packages"
                WITH cb
                  .Text = sName & " [ " & sSize & " ]" 'Trim(Right(sLine, Len(sLine) - InStr(sLine, ":")))
                  .Tag = sLoc &/ sName
                  .x = 4
                  .y = y
                  .Height = 27
                  .Width = MdlObjSizer.get_object_width(.Text) * 2
                  .Value = TRUE
                END WITH 
                ME.Pkgs.Add(cb)
                y = y + cb.Height + 4
                
            END IF
           
        NEXT 
  
END


PUBLIC SUB Packages_click()
  
    IF ClsPkgSel.arrPkgs THEN 
      ClsPkgSel.arrPkgs.Clear
    END IF
    ME.GET_USER_PKG_SELECTION()
      
  
END




PUBLIC SUB OptBulks_click()
  
  IF ClsPkgSel.arrBulks THEN 
    ClsPkgSel.arrBulks.Clear
  END IF
  ME.GET_USER_BULK_SELECTION
  
END


PUBLIC SUB GET_USER_BULK_SELECTION()
  
  DIM cb AS CheckBox
  DIM sList AS String
  DIM sItem AS String
  DIM i AS Integer
    ' start the list
    ClsPkgSel.arrBulks = NEW String[]
    FOR EACH cb IN ME.Bulks
      IF cb.Value = TRUE THEN 
        ClsPkgSel.arrBulks.Add(cb.tag)
    END IF
    NEXT ' just store them to the array for now. We will read the array at install time

  
END

PUBLIC SUB GET_USER_PKG_SELECTION()
  
  DIM cb AS CheckBox
  DIM sList, sItem AS String
  DIM i AS Integer
  ' simply get the list of packages into the array, and we will read the array while installing packages.
    ClsPkgSel.arrPkgs = NEW String[]
      FOR EACH cb IN ME.Pkgs
        IF cb.value = TRUE THEN 
          ClsPkgSel.arrPkgs.Add(cb.Tag)
        END IF
      NEXT 
       
  
END




