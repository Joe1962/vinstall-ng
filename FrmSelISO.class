' Gambas class file

'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.




PUBLIC SUB lstInstallableImg_Click()

  DIM sLocation AS String
  DIM ipos1 AS Integer
  

  
  IF lstInstallableImg.Count > 0 THEN 
  'IF lstInstallableImg.Text <> ("No Installable Media Found") THEN   
  IF lstInstallableImg.Find(("No Installable Media Found")) = -1
    IF InStr(Trim(lstInstallableImg.Text), ".iso") OR InStr(Trim(lstInstallableImg.Text), ".ISO") = TRUE THEN 
    sLocation = Left(lstInstallableImg.Text, InStr(lstInstallableImg.Text, " ") - 1)
    
  ELSE 
    ipos1 = RInStr(ME.lstInstallableImg.Text, "/")
    sLocation = Right(ME.lstInstallableImg.Text, Len(ME.lstInstallableImg.Text) - ipos1)
  END IF
  'function to read the file
  ME.DESCRIBE_DISTRO(sLocation)
  END IF
  ELSE 
    RETURN ' quiet return... we already know there are no images found
  END IF
  
'Message(Left(FrmSelISO.lstInstallableImg.text, InStr(FrmSelISO.lstInstallableImg.text, "/") - 4))


END

PUBLIC SUB Form_Open()


  ME.btVerifyInstall.Visible = FALSE
  ME.tlBanner.text = "<h3>" & tlBanner.text & "</h3>"
  
     FMain.tvPlan["Prep0"].Picture = MdlCore.sDonePic
  FMain.tvPlan["Prep1"].Picture = MdlCore.sNowPic
  FMain.tvPlan["Prep1"].Selected = TRUE
 
  
  ME.Width = ME.Parent.Width
  ME.Height = ME.Parent.Height
  ME.btResCan.Height = ME.lstInstallableImg.Height
  FMain.btback.Height = ME.btResCan.Height
  FMain.btQuit.Height = FMain.btback.Height
  FMain.btnext.Height = FMain.btback.Height
  'FMain.sNextKey = "Prep0"

  FMain.FrmCurr = ME
  MdlCore.LOCK_GUI()
  MdlCore.Init()
  MdlCore.unlock_gui()
  IF ClsGlobal.sBackNav.Find(ME) = -1 THEN 
  ClsGlobal.sBackNav.Add(ME)
  END IF
 
  IF lstInstallableImg.count = 1 AND lstInstallableImg.Find(("No Installable Media Found")) = -1 THEN 
    tlBanner.Text = ("Click") & Space(1) & "\'" & FMain.btnext.text & "\'" & Space(1) & ("to begin installating") & Space(1)&
    Left(FrmSelISO.lstInstallableImg.text, InStr(FrmSelISO.lstInstallableImg.text, "/") - 4)
    FrmSelISO.btVerifyInstall.Visible = FALSE
    FrmSelISO.btVerifyInstall.Enabled = TRUE
    FrmSelISO.btVerifyInstall.ForeColor = Color.Black
  ELSE IF lstInstallableImg.Find(("No Installable Media Found")) <> -1 THEN 
    tlBanner.Text = "<b>" & ("Unable to locate any installable media.") & "</b>"
    FMain.btnext.Enabled = FALSE
    FMain.btback.Enabled = FALSE
    FMain.btnext.ForeColor = Color.Gray
    FMain.btback.ForeColor = Color.Gray
    FrmSelISO.btVerifyInstall.Enabled = FALSE
    FrmSelISO.btVerifyInstall.ForeColor = Color.Gray
    ELSE 
      tlBanner.text = "<b>" & ("Select installation media from the list below") & "</b>"
      WITH FMain
        .btback.Enabled = FALSE
          .btback.ForeColor = Color.Gray
          .btnext.Enabled = TRUE
          .btnext.ForeColor = Color.Black
      END WITH 
      'FrmSelISO.btVerifyInstall.Enabled = TRUE
      'FrmSelISO.btVerifyInstall.ForeColor = Color.Black
  END IF 

FMain.btnext.Enabled = TRUE
FrmSelISO.btVerifyInstall.Visible = FALSE
END

PUBLIC SUB DESCRIBE_DISTRO(sLoc AS String)
  
  DIM sFile AS String[] 
  DIM sLine AS String
  DIM i AS Integer
  DIM iSep AS String
  DIM ipos1 AS Integer
  
  DIM sDist, sVer, iMinRoot, iMinHome, iMinSwap AS String
    
'    Message.Info(File.Load(Temp(sLoc)))
'Message.Info(sLoc)
  IF sLoc <> "" THEN 
    sFile = Split(File.Load(Temp$(sLoc)), gb.NewLine)
  ELSE 
    'can't find Distro ID
    Message.Error(("Unable to identify distro."))
    RETURN 
  END IF
   
  IF sFile THEN 
    FOR i = 0 TO sFile.count - 1
      sLine = Trim(sFile[i])
        
          IF InStr(sLine, "\'") = TRUE THEN 
            iSep = "\'"
          ELSE IF InStr(sline, "\"") = TRUE THEN 
            iSep = "\""
          END IF
      ipos1 = InStr(sLine, iSep)
        IF Left(sLine, Len("DISTRO=")) = "DISTRO=" THEN 
          sDist = Right(sLine, Len(sLine) - InStr(sLine, "=") - 1)
        ELSE IF Left(sLine, Len("VERSION=")) = "VERSION=" THEN 
          sVer = Right(sLine, Len(sLine) - InStr(sLine, "=") - 1)  
        ELSE IF Left(sLine, Len("HD_ROOT_MIN=")) = "HD_ROOT_MIN=" THEN 
          iMinRoot = Right(sLine, Len(sLine) - InStr(sLine, "=") - 1)
        ELSE IF Left(sLine, Len("HD_SWAP=")) = "HD_SWAP=" THEN 
          iMinSwap = Right(sLine, Len(sLine) - InStr(sLine, "=") - 1)
        ELSE IF Left(sLine, Len("HD_HOME")) = "HD_HOME" THEN 
          iMinHome = Right(sLine, Len(sLine) - InStr(sLine, "=") - 1)
          
        END IF
    NEXT 
     IF Right(sDist) LIKE "\'" OR "\"" THEN 
        sDist = Left(sDist, Len(sDist) - 1)
      END IF
      IF Right(sVer) LIKE "\'" OR "\"" THEN 
        sVer = Left(sVer, Len(sver) - 1)
      END IF
    
    FrmSelISO.tlDistroDesc.Text = "<h3>" & sDist & Space(1) & sVer & "</h3><br>" &
    "<b>" & ("Minimum Disk Space Requirements") & "</b><br>"
           
     
      IF Right(iMinRoot) LIKE "\'" OR "\"" THEN 
        iMinRoot = Left(iMinRoot, Len(iMinRoot) - 1)
        FrmSelISO.tlDistroDesc.Text = FrmSelISO.tlDistroDesc.Text & "<br>" & "<b>ROOT: </b>" & iMinRoot & " MB"
      END IF
      IF Right(iMinHome) LIKE "\'" OR "\"" THEN 
        iMinHome = Left(iMinHome, Len(iMinHome) - 1)
        FrmSelISO.tlDistroDesc.Text = FrmSelISO.tlDistroDesc.Text & "<br><b>HOME: </b>" & iMinHome & " MB"
      END IF
      IF Right(iMinSwap) LIKE "\'" OR "\"" THEN 
        iMinSwap = Left(iMinSwap, Len(iMinSwap) - 1)
        FrmSelISO.tlDistroDesc.Text = FrmSelISO.tlDistroDesc.Text & "<br><b>SWAP: </b>" & iMinSwap & " MB"
        
      END IF
      
        
        
  ELSE 
    ' can't read file
    'Message.Error("Setup is unable to locate the ")
  END IF
    
      
END


PUBLIC SUB btNext_Click()
  DIM sSel AS String
  sSel = Right(lstInstallableImg.Text, Len(lstInstallableImg.Text) - RInStr(lstInstallableImg.Text, "/"))
  PRINT "User selected to install from /dev/" & sSel
  'RETURN 
  MdlCore.SET_DECISSION(sSel)
  WAIT 
  'read the SETUP.CONF now to set the variables for the real install process to begin
    
  
END

PUBLIC SUB Form_Resize()

  WITH ME
    '.Reparent(.Parent)
    '.Resize(.Parent.Width, .Parent.Height)
    .btResCan.Width = MdlObjSizer.get_object_width(.btResCan.text) + 36
'    .btNext.Move(.Left + .Width - .btNext.Width - 8, .top + ME.Height - .btNext.Height - 8)
    '.tlBanner.Move(4, 8, MdlObjSizer.get_object_width(.tlBanner.text))
    .tlBanner.Move(4, 8, .ClientWidth - (.tlBanner.Left * 2))
    .hrSep.Move(4, .tlBanner.top + .tlBanner.Height - .hrSep.Height, .ClientWidth - (.hrSep.x * 2))
    .btResCan.Move(.ClientWidth - (.btResCan.Width + 4), .hrSep.top + .hrSep.Height + 24) ', MdlObjSizer.get_object_width(.btResCan.text) + 36)
    .lstInstallableImg.Move(4, .btResCan.top, .btResCan.Left - (.lstInstallableImg.left * 2))
    '.btResCan.Move(.Left + .Width - .btResCan.Width - 8, .top + .tlBanner.Height + 48, MdlObjSizer.get_object_width(.btResCan.text) + 36)
    '.lstInstallableImg.Move(4, .btResCan.top, .ClientWidth - ((.lstInstallableImg.Left * 2) + .btResCan.Left))
   ' .lstInstallableImg.Move(.left + 4, .btResCan.Top, .Width - (.btResCan.Width + 24), 21)
    '.tlDistroDesc.Move(.lstInstallableImg.Left * 2, .lstInstallableImg.top + .lstInstallableImg.Height + 48)
    .tlDistroDesc.Move(4, .lstInstallableImg.top + .lstInstallableImg.Height + 24, .ClientWidth - (.tlDistroDesc.left * 2)) ', .ClientHeight - (.tldistrodesc.top + .btrescan.height))
    .btVerifyInstall.Move(4, .tlDistroDesc.top + .tlDistroDesc.Height + 8, MdlObjSizer.get_object_width(.btVerifyInstall.Text) + 36, 21)
    '.FullScreen = TRUE
  END WITH 

END

PUBLIC SUB btResCan_Click()

lstInstallableImg.Clear()
MdlCore.MEDIA_SCAN
  

END

PUBLIC SUB Form_Hide()

  'FMain.frmLast = ME
  'ME.Close
  'FMain.tvPlan["Prep0"].Picture = MdlCore.sDonePic
  
  

END

PUBLIC SUB Form_Show()

  Form_Open()

END

PUBLIC SUB btVerifyInstall_Click()
  FrmMediaCheck.sEntry = Trim(ME.lstInstallableImg.Text)
  FrmMediaCheck.ShowDialog()

END
