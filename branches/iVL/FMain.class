' Gambas class file
'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.



PRIVATE sLast AS String
PUBLIC sNextKey AS String
PUBLIC FrmCurr AS Form ' assigned when a form is opened
PUBLIC frmLast AS Form ' assigned when a form is hidden
PUBLIC frmNext AS Form ' assined next form for the "next" button in fmain"

PUBLIC SUB _new()

END

PUBLIC SUB Form_Open()
ClsGlobal.sSourceMnt = "/mnt" &/ "cdrom"
FrmSelISO.Reparent(ME.pnlWinHost)
FrmSelISO.Width = pnlWinHost.Width
FrmSelISO.Height = pnlWinHost.Height
FrmSelISO.Show

MdlCore.PREPARE_INSTALL_LAYOUT
WITH ME
  .btback.Enabled = FALSE
  .btback.ForeColor = Color.Gray
  .Frame1.BackColor = Color.Transparent
  .tvPlan.BackColor = Color.transparent
  .btQuit.Text = "Exit Installation"
END WITH 
'ME.TreeView1.BackColor = Color.Transparent
ME.AUTOSIZE_LEFT_PANE

END

PUBLIC SUB AUTOSIZE_LEFT_PANE()
  
  DIM iWidth AS Integer
  ' this will find widest child in treeview
    ME.tvPlan.MoveFirst()
      REPEAT 
        IF MdlObjSizer.get_object_width(tvPlan.Item.Text) > iWidth THEN 
          iWidth = MdlObjSizer.get_object_width(tvPlan.item.Text)
        END IF
      UNTIL ME.tvPlan.MoveBelow()
  
    ME.tvPlan.Width = iWidth + (iWidth / 20)
    ME.Frame1.Width = iWidth + (iWidth / 10)
END


PUBLIC SUB ComboBox1_Click()

  

END


PUBLIC SUB Form_Resize()



DIM iMid AS Integer
  
  WITH ME
    .btQuit.Width = MdlObjSizer.get_object_width(.btQuit.Text) + 36
  END WITH 
  'ME.AUTOSIZE_LEFT_PANE

  WITH ME
    .tlBanner.width = ME.width
    .Frame1.Resize(MdlCore.iLeftWidth * 1.60, .ClientHeight - tlBanner.Height - (.btback.Height * 1.5))
    .tvPlan.Move(4, 24, .Frame1.Width - 8, Frame1.Height - (.Frame1.Height / 20))
    .pnlWinHost.Move(.Frame1.left + .Frame1.Width + 4, .Frame1.top, .tlBanner.Width - (.Frame1.Width + 8), .ClientHeight - (.tlbanner.height + (.btback.height * 2)))
    .btback.Move(.pnlWinHost.Left, .Frame1.top + .Frame1.Height - .btback.Height, MdlObjSizer.get_object_width(.btback.text) + 36)
    '.btback.Move(.pnlWinHost.Left, .pnlWinHost.Top + .pnlWinHost.Height - (.btback.Height), MdlObjSizer.get_object_width(.btback.text) + 36)
    .btnext.Move(.pnlWinHost.Left + .pnlWinHost.Width - (.btnext.Width + 8), .btback.Top, MdlObjSizer.get_object_width(.btnext.text) + 36)
    ' for the quit button, it'll get a little tricky
      ' we want that one right in the middle
    .btQuit.Move(.pnlWinHost.Left + (.pnlWinHost.Width / 2) - (.btQuit.Width / 2), .btback.top)
  END WITH 
END



PUBLIC SUB tvPlan_MouseUp()

  IF tvPlan.Current.Picture <> MdlCore.sCatPic THEN 
  sLast = tvPlan.Current.Key
  END IF

END

PUBLIC SUB btQuit_Click()

  FMain.Close

END



PUBLIC SUB btnext_Click()
  DIM sISONAME AS String
  DIM sDev AS String
  
  SELECT CASE FrmCurr.Name ' very nice navigation algoritm
    CASE "FrmSelISO"
        sDev = Right(FrmSelISO.lstInstallableImg.Text, Len(FrmSelISO.lstInstallableImg.Text) - InStr(FrmSelISO.lstInstallableImg.text, "/") + 1)
        IF InStr(FrmSelISO.lstInstallableImg.text, ".iso") OR InStr(FrmSelISO.lstInstallableImg.text, ".ISO") THEN 
           sISONAME = Left(FrmSelISO.lstInstallableImg.text, InStr(FrmSelISO.lstInstallableImg.text, " ") - 1)
           MdlSetup.GO_WITH_SELECTED(sDev, sISONAME)
        ELSE 
          MdlSetup.GO_WITH_SELECTED(sDev, "")
        END IF
    CASE "FrmPartSel"
        IF NOT ClsPartSel.sRoot OR ClsPartSel.sRoot = "" THEN 
        Message.Error("You must select a \"/\" partition. This is the target where the system will install to")
          STOP EVENT 
        ELSE 
          IF ClsPartSel.bDoWin = TRUE THEN 
            frmNext = FrmWinDrives
          ELSE 
            ' move to package selection
            frmNext = FrmPkgSel
          END IF
          
        END IF
    CASE "FrmPkgSel"
        'here we check what kind of install it is, simple  or custom
            'IF FrmPkgSel.rbCustom.Value = TRUE THEN 
            
          IF ClsPkgSel.bCustom = TRUE THEN 
              'get the list of selected bulks only
              'MdlPkgSel.GET_USER_BULK_SELECTION()
              'Message("Going for a custom install")
              MdlPkgSel.GET_USER_BULK_SELECTION()
              frmNext = FrmPkgsel2
            ELSE 
              ' now we are ready to summarize
              Message("Going for a simple install")
              MdlSummarize.SUMMARIZE_INSTALL
              frmNext = FrmSummary
            END IF
    CASE "FrmPkgsel2"
      ' summarize the build
        MdlSummarize.SUMMARIZE_INSTALL
        frmNext = FrmSummary
        'frmNext = install
    CASE "FrmWinDrives"
      'Move on to selecting packages
        frmNext = FrmPkgSel
  END SELECT 
            
            
  
  frmNext.Reparent(ME.pnlWinHost)
  FrmCurr.Hide
  frmLast = FrmCurr
  frmNext.Show
 

END
