' Gambas class file


'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.


PUBLIC SUB BEGIN_PROCESS()
  
   DIM sRes AS Integer ' we will need to 

  MdlCore.lock_gui()
  FMain.FrmCurr = ME
FMain.tvPlan["Inst0"].Picture = MdlCore.sDonePic
FMain.tvPlan["Inst1"].Picture = MdlCore.sNowPic
FMain.tvPlan["Inst1"].Selected = TRUE
  
MdlInstallSys.ACTIVATE_SWAP_SPACE() ' activate swap for the current install
   
MdlPartFrmt.PREPARE_ALL_PARTITIONS() ' formats partitions and mounts them
  
END





PUBLIC SUB Form_Open()
   
  ' ' '  DIM iMinFrameH AS Integer
  ' ' '       iMinFrameH = ME.tlCurrPkg.Height + ME.tlCurrPkg2.Height + ME.tlCurrStepLbl.Height + ME.pbInstallProg2.Height + ME.tlCurrStepLbl.Height + 36
  ' ' '   WITH ME
  ' ' '     .FrmProg.Move(4, .tlBanner.top + .tlBanner.Height + 8, .ClientWidth - (.FrmProg.Left * 2), iMinFrameH)
  ' ' '     .tlBanner.Move(4, 16, .ClientWidth - (.tlBanner.Left * 2))
  ' ' '     .hrsep.Move(4, .tlBanner.top + .tlBanner.Height - .hrsep.Height, .tlBanner.Width)
  ' ' '     '.tlBanner.Border = Border.Plain
  ' ' '     .FrmProg.Move(4, .tlBanner.top + (.tlBanner.Height + 36), .ClientWidth - (.FrmProg.Left * 2))
  ' ' '     .tlCurrPkg.move(8, 32, .FrmProg.Width - (.tlCurrPkg.Left * 2))
  ' ' '     .tlCurrStepLbl.Move(.tlCurrPkg.Left, .tlCurrPkg.top + (.tlCurrPkg.Height + 4), MdlObjSizer.get_object_width(.tlCurrStepLbl.Text) + 8, 27)
  ' ' '     .pbInstallProg.Move(.tlCurrStepLbl.left + (.tlCurrStepLbl.Width), .tlCurrStepLbl.top, .FrmProg.Width - (.tlCurrStepLbl.Width + (.tlcurrsteplbl.left * 2)))
  ' ' '     .tlCurrPkg2.Move(.tlCurrPkg.Left, .tlCurrPkg.top + (.tlCurrPkg.Height * 2.5), .FrmProg.Width - (.tlCurrPkg.Left * 2))
  ' ' '     .pbInstallProg2.Move(.tlCurrPkg2.Left, .tlCurrPkg2.top + (.tlCurrPkg2.Height + 2), .tlCurrPkg2.Width, 27)
  ' ' ' 
  ' ' '     .scrlCredits.Move(.FrmProg.left, .FrmProg.top + FrmProg.Height + 24, .FrmProg.Width)
  ' ' '     
  ' ' '     .tlCredits.Move(8, 4)
  ' ' ' END WITH
  ' ' '  
   
FMain.FrmCurr = ME

FMain.FrmCurr = ME
FMain.tvPlan["Inst0"].Picture = MdlCore.sDonePic
FMain.tvPlan["Inst1"].Picture = MdlCore.sNowPic
FMain.tvPlan["Inst1"].Selected = TRUE
  ME.tlBanner.Text = "<h3>" & tlBanner.Text & "</h3>"
  
  
'MdlSetup.RUN_CREDITS

      'ClsGlobal.sSourceMnt = "/mnt/cdrom"
      'ME.FrmProg.Text = " Preparing system for installation "
      ME.tlCurrStepLbl.Text = ("Current Step")
      'ME.show_credits
      'MdlSetup.RUN_CREDITS(ClsGlobal.sSourceMnt &/ "CREDIT", ME.tlCredits)
      'ME.tmCredits.Enabled = TRUE
 
'STOP EVENT 

'MdlSetup.RUN_CREDITS(ClsGlobal.sSourceMnt &/ "CREDIT", ME.tlCredits)
'WAIT 
ME.ResizeScaled(ME.Parent.Width, ME.Parent.Height)
ME.scrlCredits.Border = Border.Sunken
WAIT 1
Message("Window has been resized")
'ME.scrlCredits.Border = Border.Plain
WAIT 2
'ME.BEGIN_PROCESS()  ' COMMENTED FOR TESTING PURPOSES
MdlSetup.BEGIN_INSTALLATION()



END

PUBLIC SUB Form_Show()

  Form_Open()

END

' ' ' PUBLIC SUB Form_Resize()
' ' ' 
' ' '     DIM iMinFrameH AS Integer
' ' '         iMinFrameH = ME.tlCurrPkg.Height + ME.tlCurrPkg2.Height + ME.tlCurrStepLbl.Height + ME.pbInstallProg2.Height + ME.tlCurrStepLbl.Height + 36
' ' '     WITH ME
' ' '       '.FrmProg.Move(4, .tlBanner.top + .tlBanner.Height + 8, .ClientWidth - (.FrmProg.Left * 2), iMinFrameH)
' ' '       .tlBanner.Move(4, 16, .ClientWidth - (.tlBanner.Left * 2))
' ' '       .hrsep.Move(4, .tlBanner.top + .tlBanner.Height - .hrsep.Height, .tlBanner.Width)
' ' '       '.tlBanner.Border = Border.Plain
' ' '       '.FrmProg.Move(4, .tlBanner.top + (.tlBanner.Height + 36), .ClientWidth - (.FrmProg.Left * 2))
' ' '       '.FrmProg.Move(4, .hrsep.top + .hrsep.Height + .tlBanner.Height, .ClientWidth - (.FrmProg.Left * 2))
' ' '           ' / The following objects are inside the frame
' ' '       .tlCurrPkg.move(8, 24, .FrmProg.Width - (.tlCurrPkg.Left * 2)) 
' ' '       .tlCurrStepLbl.Move(.tlCurrPkg.Left, .tlCurrPkg.top + (.tlCurrPkg.Height + 4), MdlObjSizer.get_object_width(.tlCurrStepLbl.Text) + 8, 27)
' ' '       .pbInstallProg.Move(.tlCurrStepLbl.left + (.tlCurrStepLbl.Width), .tlCurrStepLbl.top, .FrmProg.Width - (.tlCurrStepLbl.Width + (.tlcurrsteplbl.left * 2)))
' ' '       .tlCurrPkg2.Move(.tlCurrPkg.Left, .tlCurrPkg.top + (.tlCurrPkg.Height * 2.5), .FrmProg.Width - (.tlCurrPkg.Left * 2))
' ' '       .pbInstallProg2.Move(.tlCurrPkg2.Left, .tlCurrPkg2.top + (.tlCurrPkg2.Height + 2), .tlCurrPkg2.Width, 27)
' ' '       .FrmProg.Move(4, hrsep.top + .hrsep.Height + .tlBanner.Height, .clientw - (.FrmProg.x * 2), 32 + (.tlCurrStepLbl.H + .tlCurrPkg.h + .tlCurrPkg2.h + (.pbInstallProg2.h * 2)))
' ' ' '      .frmCredits.Move(.FrmProg.left, .FrmProg.top + .FrmProg.Height + 16, .FrmProg.Width)
' ' '       '.scrlCredits.move(8, 24, .FrmProg.Width - (.scrlCredits.left * 2))
' ' '       '.scrlCredits.Move(.FrmProg.left, .FrmProg.top + FrmProg.Height + 24, .FrmProg.Width)
' ' '       
' ' '       '.tlCredits.Move(8, 4)
' ' '       
' ' '       '.pbInstallProg.Move(.tlCurrStepLbl.Left + (.tlCurrStepLbl.Width + 2), .FrmProg.Width - (.tlCurrStepLbl.Width + (.tlCurrStepLbl.left * 2))) '
' ' '       '.pbInstallProg.Move(.tlCurrPkg.Left, .tlCurrPkg.top + (.tlCurrPkg.Height + 2), .tlCurrPkg.Width)
' ' '       
' ' '     END WITH 


''''''END

PUBLIC SUB HIDE_PROGRES_CONTROLS()
  
  WITH ME
    .tlCurrStepLbl.Visible = FALSE
    .pbInstallProg.Visible = FALSE
    .tlCurrPkg2.Visible = FALSE
    .pbInstallProg2.Visible = FALSE
  END WITH 
  
END




PUBLIC SUB tmCredits_Timer()
  
  ' ' ' DIM i AS Integer = ME.FrmProg.left + 20
  ' ' ' 
  ' ' ' IF ME.tlCredits.x < (i) - (ME.tlCredits.Width) THEN ME.tlCredits.x = (frmCredits.Width - 12)
  ' ' '   tlCredits.x = frmCredits.left + 4 + (tlCredits.x - 10)
  ' ' ' 
  ' ' ' 
  
  
  
  
  DIM X AS Integer
  X = ME.scrlCredits.ScrollX
  REPEAT 
  INC ME.scrlCredits.ScrollX
      IF X = ME.scrlCredits.Scrollx THEN 
        ME.scrlCredits.scrollx = 0
        ME.tmCredits.Enabled = FALSE
      END IF
  UNTIL tmCredits.Enabled = FALSE
    
   
   '  
   ' IF ME.sclCredits.ScrollX < - ME.tlCredits.Width + ME.tlCredits.x THEN
   '   ME.sclCredits.Scrollx = ME.sclCredits.Width
   ' ENDIF

END




PUBLIC SUB Form_Resize()

  WITH ME
    .tlBanner.Move(4, 4, .ClientWidth - (.tlBanner.x * 2))
    .hrsep.Move(4, .tlBanner.top + .tlBanner.Height, .tlBanner.Width)
    .FrmProg.Move(4, .hrsep.top + .hrsep.Height + .tlBanner.Height, .clientw - (.FrmProg.x * 2), .clienth - (.FrmProg.y + .tlBanner.h))
      ' items inside the frame
      .tlCurrPkg.Move(8, 24, .FrmProg.Width - (.tlCurrPkg.Left * 2))
      .tlCurrStepLbl.Move(8, .tlCurrPkg.top + .tlCurrPkg.Height + 4, MdlObjSizer.get_object_width(.tlCurrStepLbl.text))
      .pbInstallProg.Move(.tlCurrStepLbl.Left + .tlCurrStepLbl.Width + 8, .tlCurrStepLbl.top, .FrmProg.w - (.pbInstallProg.x + (.tlCurrStepLbl.left * 2)))
      .tlCurrPkg2.Move(8, .pbInstallProg.top + .pbInstallProg.Height + 4, .ClientW - (.tlCurrPkg2.x * 2))
      .pbInstallProg2.Move(8, .tlCurrPkg2.top + .tlCurrPkg2.Height + 2, .FrmProg.Width - (.pbInstallProg2.x * 2))
  END WITH 

END
