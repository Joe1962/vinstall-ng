' Gambas class file
'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.


PUBLIC sVidMode AS String
PUBLIC sLiloTrgt AS String

PUBLIC SUB Form_Open()
    
  
  ME.tlBanner.Text = "<h3>" & tlBanner.text & "</h3>"
  'ClsPartSel.sRoot = "/dev/sdb1" ' 
 FMain.FrmCurr = ME
   FMain.tvPlan["Conf0"].Selected = TRUE
   FMain.tvPlan["Conf0"].Picture = MdlCore.sNowPic
   FMain.tvPlan["Inst1"].Picture = MdlCore.sDonePic
  ME.sVidMode = "Standard"
MdlConfLilo.DISPLAY_LILO_TARGET_OPTIONS()
MdlLiloOsList.LIST_LILO_OS_CHOICES()
MdlLiloOsList.LIST_WIN_INSTALL_CHOICES(ME.TabStrip1.Count)
ME.tlList.text = ("The following Operating Systems have been detected on this computer. Choose your desired option") & Space(1)&
("for each one of them by clicking on each tab. To proceed with the default pre-set values, simply click") & Space(1) & "\'" & FMain.btnext.text & "\'"
ME.tlList.Adjust
ME.TabStrip1.Index = MdlLiloOsList.iVltag
MdlLiloOsList.bVlCliOption = TRUE

' ' ' 
'


'ME.Maximized = TRUE
FBResolution_Click()
FBResolution.text = "Bootsplash High"
FBResolution_Click()
MdlLiloOsList.list_boot_options()
ME.TabStrip1.Index = 0
ME.cbDefBoot.Text = "Linux"
END






PUBLIC SUB YNLiloBox_Click()

  IF ME.YNLiloBox.value = TRUE THEN 
    WITH ME
'      .LiloAppendBox.Enabled = FALSE
      .LiloTarget.Enabled = FALSE
      .FBResolution.Enabled = FALSE
      .TabStrip1.Enabled = FALSE
      .sbTimer.Enabled = FALSE
      .cbDefBoot.Enabled = FALSE
    END WITH 
    ELSE 
    WITH ME
      .TabStrip1.Enabled = TRUE
      '.LiloAppendBox.Enabled = TRUE
      .LiloTarget.Enabled = TRUE
      .FBResolution.Enabled = TRUE
      .sbTimer.Enabled = TRUE
      .cbDefBoot.Enabled = TRUE
    END WITH 
  END IF
      
      

END

PUBLIC SUB Form_Resize()

  DIM cbleft, cbwidth AS Integer
  DIM tb AS TextBox
  DIM tl AS TextLabel

  WITH ME
    .tlTarGet.Alignment = Align.Normal
    .tlFbMode.Alignment = Align.Normal
    .tlBanner.Move(4, 4)
    .tlBanner.Width = .ClientWidth - (.tlBanner.x * 2)
    .hrsep.Move(4, .tlBanner.top + .tlBanner.Height - 4, .tlBanner.Width)
    .YNLiloBox.Move(.tlBanner.left, .hrSep.Top + .hrSep.Height + 4, MdlObjSizer.get_object_width(.YNLiloBox.text) + 36, 21)
    .tlTarGet.Move(.YNLiloBox.left, .YNLiloBox.top + (.YNLiloBox.Height * 1.5), MdlObjSizer.get_object_width(.tlTarGet.Text))
    .LiloTarget.Move(.tlTarGet.Left + .tlTarGet.Width + 4, .tlTarGet.top, (.tlBanner.Width / 2.75) - (.tlTarGet.Width + .tlTarGet.left))
    .tlFbMode.Move(.LiloTarget.Left + LiloTarget.Width + 32, .LiloTarget.top, MdlObjSizer.get_object_width(.tlFbMode.text))
    .FBResolution.Move(.tlFbMode.Left + .tlFbMode.Width + 8, .tlFbMode.top, .ClientWidth - (.FBResolution.Left + 16))
    '.FBResolution.Move(.tlFbMode.Left + .tlFbMode.Width + 4, .tlFbMode.top, .ClientWidth - (.FBResolution.Left + (.FBResolution.Width * 0.75)))
    cbleft = .FBResolution.Left
    cbwidth = .FBResolution.Width
    .tlTimeOUt.Move(.tlTarGet.left, .tlTarGet.top + .tlTarGet.Height + 12, MdlObjSizer.get_object_width(.tlTimeOUt.Text))
    .sbTimer.Move(.tlTimeOUt.Left + .tlTimeOUt.Width + 4, .tlTimeOUt.top, 60)
    .tlTimoutSec.Move(.sbTimer.Left + .sbTimer.Width + 4, .sbTimer.top, MdlObjSizer.get_object_width(.tlTimoutSec.text))
    .tlDefBoot.Move(.tlFbMode.Left, .sbTimer.top, MdlObjSizer.get_object_width(.tlDefBoot.text), 27)
    
    .cbDefBoot.Move(cbleft, .tlDefBoot.top, cbwidth, 21)
    
    .tlList.Move(.tlTimeOUt.left, .tlTimeOUt.top + .tlTimeOUt.Height + 12, .tlBanner.Width)
    
    '.TabStrip1.Move(.tlList.Left, .tlList.top + .tlList.Height + 8, .ClientWidth - (.TabStrip1.left * 2), .ClientHeight - (.tlBanner.Height * 8))
    .TabStrip1.Move(.tlList.Left, .tlList.top + .tlList.Height + 8, .ClientWidth - (.TabStrip1.left * 2), .ClientHeight - (.TabStrip1.top) - (.YNLiloBox.Height * 10))
    '.TabStrip1.Move(4, .tlList.top + .tlList.Height + 8, .ClientWidth - (.TabStrip1.Left * 2), .ClientHeight - (.TabStrip1.top + (.YNLiloBox.height * 3)))

  END WITH 
  FOR EACH tb IN MdlLiloOsList.txtAppends
    FOR EACH tl IN MdlLiloOsList.tlappends
      IF tb.tag = tl.tag THEN 
        tb.Move(tl.left + tl.Width + 4, tl.top, ME.TabStrip1.Width - tb.left - 8)
      END IF
    NEXT 
  NEXT 

END


PUBLIC SUB FBResolution_Click()
  DIM box AS TextBox
  ME.sVidMode = Trim(ME.FBResolution.Text)
  'MdlLiloOsList.LIST_LILO_OS_CHOICES()
  IF Trim(ME.FBResolution.Text) = ("Standard") THEN 
    FOR EACH box IN MdlLiloOsList.txtAppends
      'box.Enabled = FALSE
      box.text = Replace(box.text, "splash=silent", "") '"Not available in \'Standard\' resolution mode"
      box.Width = box.Parent.Width - MdlLiloOsList.iAppendLeft - 12
    NEXT 
    
  ELSE 
    FOR EACH box IN MdlLiloOsList.txtAppends
      box.Enabled = TRUE
        IF InStr(box.text, "splash=") = FALSE THEN 
          IF box.text <> "" THEN 
            box.text = box.text & " splash=silent"
          ELSE 
            box.text = "splash=silent"
          END IF
      
        END IF
      box.Width = box.Parent.Width - MdlLiloOsList.iAppendLeft - 12
    NEXT 
  END IF
    
  

END



PUBLIC SUB Form_Menu()

  
  'MdlConfLilo.GENERATE_LILO_DOT_CONF()
'  MdlConfLilo.GATHER_OTHER_LINUX_KERNELS_AND_INITRDS()
  'MdlConfLilo.WRITE_LILO_DOT_CONF()

END

PUBLIC SUB Form_Show()

   FMain.FrmCurr = ME
   FMain.tvPlan["Conf0"].Selected = TRUE
   FMain.tvPlan["Conf0"].Picture = MdlCore.sNowPic
   FMain.tvPlan["Inst1"].Picture = MdlCore.sDonePic
  ME.sVidMode = "Standard"

END
