' Gambas module file

'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.
'====================================================================================================

PUBLIC bScanned AS Boolean

PUBLIC FUNCTION ID_LINUX(sMountedLocation AS String) AS String
  DIM sRes AS String
  
  IF Exist(sMountedLocation &/ "etc/vector-version") THEN 
    sres = "VectorLinux"
  ELSE IF Exist(sMountedLocation &/ "etc/slackware-version") THEN 
    sres = "Slackware"
  ELSE IF Exist(sMountedLocation &/ "etc/Suse-release") OR Exist(sMountedLocation &/ "UnitiedLinux-release") THEN 
    sres = "SuSE"
  ELSE IF Exist(sMountedLocation &/ "etc/gentoo-release") THEN 
    sres = "Gentoo"
  ELSE IF Exist(sMountedLocation &/ "etc/debian_version") THEN 
    SHELL "grep -m 1 cdrom " & sMountedLocation &/ "etc" &/ "apt" &/ "sources.list | cut -d \"[\" -f2 | cut -d \" \" -f 1,2" TO sres
      IF Len(Trim(sres)) >= 0 THEN 
        sres = Trim(Replace(sres, " ", "_"))
      ELSE 
        sres = "Debian"
      END IF
  ELSE IF Exist(sMountedLocation &/ "etc/mandrake-release") THEN ' this should be mandriva now
    sres = "Mandrake"
  ELSE IF Exist(sMountedLocation &/ "etc/redhat-release") THEN 
    sres = "RedHat"
  ELSE IF Exist(sMountedLocation &/ "etc/fedora-release") THEN 
    sres = "Fedora"
  ELSE 
    sres = "Linux"
      
  END IF
  
  RETURN sres
  
END


PUBLIC FUNCTION Find_Linux(sPartition AS String) AS String
  ' None: No linux found
  ' Linux: Unknown linux found
  ' DISTRO_NAME: DISTRO_NAME found
  ' Fail: Error running function

DIM sAddr AS String = Right(sPartition, Len(sPartition) - RInStr(sPartition, "/"))
DIM sTempTarget AS String = "/mnt" &/ sAddr
DIM sres AS String


  SHELL "mkdir -p /mnt" &/ sAddr & Space(1) & "2>/dev/null" WAIT 
  SHELL "mount " & sPartition & Space(1) & "/mnt" &/ sAddr & Space(1) & "2>/dev/null" WAIT 
  
    ' perform test to see if there is a linux partition here
    IF IsDir(sTempTarget &/ "boot") THEN ' this feels like linux here
      IF IsDir(sTempTarget &/ "etc") THEN ' this is definitely linux
        ' ============== IDENTIFY LINUX DISTRO ====================
        sres = ID_LINUX(sTempTarget)
        
      END IF
    END IF
  IF Len(Trim(sres)) > 0 THEN 
    sRes = Trim(sRes)
  ELSE 
    sRes = "None"
  END IF
  RETURN sres
  
  
  
END
PUBLIC SUB populate_linux_entry(sLinux AS String, sLinuxRoot AS String, objTabStrip AS TabStrip)
  
  DIM i AS Integer
  DIM tb AS TextBox
  DIM tl AS TextLabel
  DIM cb AS CheckBox
  DIM hb AS HBox
  DIM comb AS ComboBox
  
  IF NOT sLinux OR Len(Trim(sLinux)) <= 0 THEN RETURN 
  'Message(sLinux)
  IF sLinuxRoot = ClsGlobal.sRoot THEN ' This is the just installed linux
    i = 0
      WITH objTabStrip
        .Index = i
        .Text = "VectorLinux"
      END WITH 
  ELSE 
  i = objTabStrip.Count - 1
    WITH objTabStrip
      .Index = i
      .Text = sLinux
    END WITH 
  END IF
  
  tl = NEW TextLabel(objTabStrip) AS "Banner"
    WITH tl
      .Text = ("Installation found in") & Space(1) & sLinuxRoot
      .Height = 24
      .Alignment = Align.Left
      .Width = 200
      .Expand = TRUE
      '.Border = Border.Plain
      '.AutoResize = TRUE
      .Move(4, 4)
    END WITH 
  hb = NEW HBox(objTabStrip) ' separator space
    WITH hb
      .Height = 16
      .Width = 12
      .Expand = TRUE
    END WITH 
  cb = NEW CheckBox(objTabStrip) ' Inlcude/Exclude OS from boot menu
    WITH cb
      .Expand = TRUE
      .Text = ("Include in boot menu")
      .Value = TRUE
      .Height = 24
      .Tag = sLinuxRoot
    END WITH 
  hb = NEW HBox(objTabStrip) ' separator space
    WITH hb
      .Height = 12
      .Expand = TRUE
    END WITH 
  hb = NEW HBox(objTabStrip) ' This will hold a few objects of it's own
    WITH hb
      .Height = 28
      .Expand = TRUE
      .Padding = 2
      .Spacing = 2
    END WITH 
  tl = NEW TextLabel(hb) ' Name label
    WITH tl
      .Text = ("Name")
      .Expand = FALSE
      .Width = 200
      .Adjust()
      .AutoResize = TRUE
      .Height = .Parent.Height
      .Alignment = Align.Left
    END WITH 
  tb = NEW TextBox(hb) ' Name entry box
    WITH tb
      .Expand = TRUE
      .Height = .Parent.Height
      .Tag = sLinuxRoot
    END WITH 
  tl = NEW TextLabel(hb) ' initrd label
    WITH tl
      .text = ("Initial RAM disk image")
      .Alignment = Align.Right
      .Height = .Parent.Height
      .Expand = TRUE
    END WITH 
  comb = NEW ComboBox(hb) ' initrd selection combobox
    WITH comb
      .Height = .Parent.Height
      .Expand = TRUE
      .READonly = TRUE
      .Tag = sLinuxRoot
    END WITH 
  hb = NEW HBox(objTabStrip) ' blank space separator
  hb.Height = 8
  hb.Expand = TRUE
  tl = NEW TextLabel(objTabStrip) ' append line textlabel
    WITH tl
      .Text = ("Kernel boot options")
      .Height = 24
      .Width = 200
      .Alignment = Align.Left
      .Expand = FALSE
      .AutoResize = TRUE
    END WITH 
  tb = NEW TextBox(objTabStrip) ' append input line
    WITH tb
      .Text = "splash=silent"
      .Height = 24
      .Expand = TRUE
      .Tag = sLinuxRoot
    END WITH 
    
    ' ======================= ONLY FOR THE OS WE JUST INSTALLED ===============================
  IF sLinuxRoot = ClsGlobal.sRoot THEN 
    hb = NEW HBox(objTabStrip) ' yet another separator
      WITH hb
        .Expand = TRUE
        .Height = 8
      END WITH 
    cb = NEW CheckBox(objTabStrip) AS "bCLIOption"
      WITH cb
        .Value = TRUE
        .Text = ("Add option to boot this operating system into text mode")
        .Height = 24
        .Expand = TRUE
        .Tag = sLinuxRoot
      END WITH 
    hb = NEW HBox(objTabStrip)
      hb.Height = 4
      hb.Expand = TRUE
      
  END IF
    
  
      
  
END


PUBLIC SUB List_Other_Linuxes(objTabStrip AS TabStrip) ' tell me where you want the results.
  
  DIM sDump, sPartitions, sPart AS String
  DIM sPartList AS String[]
  DIM i AS Integer
  DIM sOutcome AS String
  
  bScanned = TRUE
              'Message(ClsGlobal.sRoot)
'            Message(Trim(sPartList[i]))
  
  ' First, and foremost, we will list the recently isntalled VectorLinux
    populate_linux_entry("VectorLinux", ClsGlobal.sRoot, objTabStrip) ' This will list the newly isntall VL OS
  ' Now list all other linuxes =================================================
      SHELL "probepart | grep \"^/dev\" | grep -vi swap | grep -i linux | tr -s \' \' | cut -f 1 -d \' \'" TO sDump
        sDump = Trim(sDump)
          IF Len(sDump) <= 0 THEN RETURN ' nothing found, VL is the only distro in this box ... 
        sPartList = Split(sDump, gb.NewLine)
          FOR i = 0 TO sPartList.Max
            sPart = Trim(Right(sPartList[i], Len(sPartList[i]) - RInStr(sPartList[i], "/")))

              'IF Trim(ClsGlobal.sRoot) <> Trim(sPartList[i]) THEN 
                sOutcome = ME.Find_Linux(Trim(sPartList[i]))
              ' will only list the linux IF one IS present
                IF Trim(sPartList[i]) <> Trim(ClsGlobal.sRoot) THEN
                  INC objTabStrip.Count
                  objTabStrip.Index = objTabStrip.Count - 1
                  populate_linux_entry(sOutcome, Trim(sPartList[i]), objTabStrip)
                END IF
              'END IF
                
          NEXT 
        
  
  ' now list all other Windows os's ============================================
    
  
END


