' Gambas class file
'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.
PUBLIC sListToReset AS String

PUBLIC FUNCTION check_for_impartable_accounts() AS Boolean

  DIM sFile AS String
  DIM sDump AS String
  DIM sMajorDump AS String
    FOR EACH sFile IN Dir(ClsGlobal.sTargetPath &/ "home/", "*", gb.Directory)
      IF sFile <> "ftp" THEN 
        SHELL "grep ^" & Trim(sFile) & ClsGlobal.sTargetPath &/ "etc/group" TO sDump
          sDump = Trim(sDump)
        IF sDump THEN sMajorDump = sMajorDump & sDump
      END IF
      
    NEXT 
  sMajorDump = Trim(sMajorDump)
  IF sMajorDump THEN RETURN TRUE
  
  
END


PUBLIC SUB Form_Open()

  WITH ME
    .tlbanner.Text = "<b>" & tlbanner.Text & "</b>"
    .tlTxt.Text = ("Create as many user accounts as you want / need here.") & "<br>" &
     ("Choose a unique login name for each user account.") & "<br><br>" '
      ' --- only if running embedded --- '
      IF ClsGlobal.fRunningMainForm THEN 
        .tlTxt.Text = tlTxt.Text &
          ("When finished, Click") & Space(1) & "\"" & ClsGlobal.fRunningMainForm.btnext.text & "\"" & Space(1) & ("to continue")
      END IF
     .btPicSel.Picture = Picture.Load("/usr/share/apps/kdm/pics/users/default2.png")
  END WITH 
  WAIT 0.1
  Button1.Enabled = ME.check_for_impartable_accounts()
  'MdlMain.Display_User_Group_Choices(ME.lbUsrGrps)

END
PUBLIC FUNCTION GetNext() AS String
  
  RETURN "Conf4"
  
END

PUBLIC SUB OnExit()
  
  
  
END
PUBLIC SUB StartUp()
  
  DIM obj AS Object
    FOR EACH obj IN lbUsrGrps.Children
      obj.delete
    NEXT 
  MdlMain.Display_User_Group_Choices(ME.lbUsrGrps)
  
END




PUBLIC SUB Form_Resize()

  ME.scrlConts.Height = ME.ClientH - (ME.scrlConts.Top + 8)
  ME.lbUsrGrps.Width = ME.lbUsrGrps.Parent.Width - (ME.lbUsrGrps.Left * 2)
  ME.lbUsrGrps.Height = ME.lbUsrGrps.Parent.Height - (ME.lbUsrGrps.Top * 1.25)

END

PUBLIC SUB TextBox4_KeyPress()

  

END


PUBLIC SUB btPicSel_Click()
  Dialog.Path = "/usr/share/apps/kdm/pics/users"
  IF NOT (txtLogin.Text) THEN 
    Dialog.Title = ("Select picture ID")
  ELSE 
    Dialog.Title = ("Select picture ID for") & Space(1) & ME.txtLogin.Text
  END IF
  Dialog.Filter = ["*.png;*.jpg;*.jpeg", "Picture Files"]
  IF Dialog.OpenFile() THEN RETURN 
      LAST.Picture = Picture.Load(Dialog.Path)

END

PUBLIC SUB Button2_Click()
  DIM obj AS Object
  ' clear this form
    ME.txtLogin.Clear
    ME.txtRealName.Clear
    ME.txtPass1.Clear
    ME.txtPass2.Clear
    
    FOR EACH obj IN ME.lbUsrGrps.Children
      obj.delete
    NEXT 
    MdlMain.Display_User_Group_Choices(ME.lbUsrGrps)
    ' default the picture
    ME.btPicSel.Picture = Picture.Load("/usr/share/apps/kdm/pics/users/default2.png")
    Dialog.Path = ""
    sListToReset = ""

END

PRIVATE FUNCTION Check_Text_Entry() AS Boolean
  
  ' will return true for faulty entry, false for clear
  ' tHIS FUNCTION WILL MAKE SURE EVERYTHING IS CLEAR FOR USER ACCOUNT TO BE CREATED.
  IF NOT (txtLogin.Text) THEN 
    Balloon.Error(("You must enter a login name first."), txtLogin)
    RETURN TRUE
  ELSE IF NOT (txtPass1.Text) THEN 
    Balloon.Error(("Please select a password for") & Space(1) & txtLogin.Text & Space(1) & ("before continuing"), txtPass1)
    RETURN TRUE
  ELSE IF NOT (txtPass2.Text) THEN 
    Balloon.Error(("You must enter the password twice for added security"), txtPass2)
    RETURN TRUE
  END IF
  RETURN FALSE
END

PUBLIC SUB btAddUsr_Click()

  DIM sPicpath AS String
  '1) Check to make sure all entries are filled in
  '2) Check to see if the user does not already exist
  '3) If conditions 1 & 2 are passed, then create the account.
  '4) Check for errors during account creation ^^^^^^^^^^^^^ (done in step3)
  
  '-== Get the right picture path ==-
    IF NOT (Dialog.Path) THEN 
      sPicpath = "/usr/share/apps/kdm/pics/users/default2.png"
    ELSE 
      sPicpath = Dialog.Path
    END IF

  '-== Make sure we have valid entries before trying to create a user account ==-  
  IF Check_Text_Entry() = FALSE THEN 
    IF MdlMain.CHECK_EXISTING_USER(Trim(ME.txtLogin.Text)) = FALSE THEN 
      MdlMain.CREATE_NEW_USER_ACCOUNT(Trim(txtLogin.Text), Trim(txtRealName.Text), btPicSel.Picture, Trim(txtPass2.Text)) ' create new account
    ELSE ' user exists
      Message.Error(("User") & Space(1) & "\"" & Trim(ME.txtLogin.Text) & "\"" & Space(1) & ("already exists in the system.") & "<br>" &
      ("Please select another user login name"))
      RETURN 
      STOP EVENT 
    END IF
  ELSE 
    RETURN 
    STOP EVENT 
  END IF
  ' clear the form now
    IF sListToReset THEN 
      ' user account is being imported
      Reset_Accounts_Settings(Trim(ME.txtLogin.Text))
    END IF
      
  Button2_Click()

END

PUBLIC SUB Reset_Accounts_Settings(sUsrLogin AS String)
  
  DIM sSkelPath AS String = ClsGlobal.sTargetPath &/ "etc/skel"
  DIM sTargetPath AS String = ClsGlobal.sTargetPath &/ "home" &/ sUsrLogin
  DIM sSettings AS String[] = Split(Replace(Trim(sListToReset), " ", ","), ",")
  DIM sFile AS String
  DIM i AS Integer
  
    FOR i = 0 TO sSettings.Max
      sFile = Trim(sSettings[i])
      TRY KILL sTargetPath &/ sFile
      SHELL "cp -r " & sSkelPath &/ sFile & Space(1) & sTargetPath WAIT 
      SHELL "chroot " & ClsGlobal.sTargetPath & " /bin/chown " & sUsrLogin & ":users " & sTargetPath &/ sFile WAIT 
    NEXT 

  
  
END


PUBLIC SUB txtLogin_KeyPress()
  

  IF Key.Text LIKE "*[a-z]*" OR Key.Text LIKE "*[0-9]*" THEN 
    ' legal characters
  ELSE 
  ' illegal characters
    Balloon.Info(("Use only lowercase letters and numbers for this field"), LAST)
    STOP EVENT 
  END IF
  
END


PUBLIC SUB Button1_Click()
  
  Button2_Click()
  Conf3a.Import_User()
  
END
