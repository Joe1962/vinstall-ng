' Gambas module file
'    This file is part of vinstall-ng

'    vinstall-ng is free software: you can redistribute it and/or modify
'    it under the terms of the GNU General Public License as published by
'    the Free Software Foundation, either version 2 of the License, or
'    (at your option) any later version.

'    vinstall-ng  is distributed in the hope that it will be useful,
'    but WITHOUT ANY WARRANTY; without even the implied warranty of
'    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
'    GNU General Public License for more details.

'    You should have received a copy of the GNU General Public License
'    along with vinstall-ng.  If not, see <http://www.gnu.org/licenses/>.

PUBLIC SUB LIST_NETWORK_INTERFACES()
  
  ' This SUB will detect network interfaces and offer setup options for each one of them
    DIM seths AS String
    DIM saths AS String
    DIM sDevList AS String[]
    DIM sLine AS String[]
    DIM sDev AS String
    DIM sType AS String
    DIM sDevAddr AS String
    DIM tl AS TextLabel
    DIM tb AS TextBox
    DIM cb AS ComboBox
    DIM i, ii AS Integer
    DIM pTabPic AS picture = Picture["images/ethernet.png"]
    
    SHELL "ifconfig -a | grep eth" TO seths
      File.Save(Temp("eths"), Trim(seths))
      
      sDevList = Split(File.Load(DConv(Temp("eths"))), gb.NewLine)
      'Message(DConv(File.load(Temp("eths"))))
    'sEths = Trim(seths)
    'sDevList.Clear
    
      'sDevList = Split(seths, "\n")
        'FrmNetConf.TsNetDevices.count = sDevList.count - 1
        'PRINT FrmNetConf.TSNetDevices.count
        'PRINT sDevList.Count - 1
        'FrmNetConf.TsNetDevices.index = 0
        FOR i = 0 TO sDevList.count - 1
          sLine = Split(sDevList[i], " ")
          sDev = sLine[0]
           sDevAddr = sLine[10] ' This may be off depending on which box this runs one... needs careful testing 
         
          WITH FrmNetConf.TSNetDevices
            PRINT .Count
          
            
            .index = i 
            '.text = Left(sDevList[i], 4)
            .text = sDev
              IF sDevList[i] <> "" THEN 
                INC .Count
              END IF
            .picture = pTabPic
                  ' populate it with the objects
                  tl = NEW TextLabel(FrmNetConf.TSNetDevices) AS "DevAddresses"
                    WITH tl
                      .Move(4, 16)
                      .text = "Hardware Address"
                      .Height = 21
                      .Alignment = Align.Normal
                      .Width = MdlObjSizer.get_object_width(.text)
                      
                    END WITH
                  tb = NEW TextBox(FrmNetConf.TSNetDevices) AS "txtDevAddresses"
                    WITH tb
                    .Move(tl.left + tl.Width + 4, tl.top)
                    .text = DConv(sDevAddr)
                    .ReadOnly = TRUE
                    .Width = MdlObjSizer.get_object_width(.text) + 24
                    .Height = tl.Height
                    END WITH
          END WITH 
                  
         
         NEXT 
  FrmNetConf.TSNetDevices[FrmNetConf.TSNetDevices.count - 1].Delete ' Ugly hack to delete the trailing blank tab
  
          
        
        
        
        
          IF ERROR THEN Message(Error.text & gb.newline & Error.where) 
  
  
END
